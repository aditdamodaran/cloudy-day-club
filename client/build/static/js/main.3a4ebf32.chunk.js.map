{"version":3,"sources":["icons/default-playlist-cover.svg","icons/play-icon-circular.svg","static/splashscreen.jpg","icons/sound-icon-circular.svg","icons/logo.svg","icons/play-icon.svg","icons/pause-icon.svg","icons/list-icon.svg","icons/logout-icon.svg","styles/themes.js","components/Login.js","utils/index.js","spotify/index.js","components/PlaylistContainer.js","components/Loader.js","components/Playlists.js","actions/cachePlaylists.js","components/Playlist/PlaylistHeader.js","components/Playlist/PlayButton.js","components/Playlist.js","actions/playerControls.js","components/Player/NowPlayingText.js","components/Player/Controls.js","components/Player/StandardPlayer.js","components/Player/Player.js","components/PlayerContainer.js","colors/index.js","components/Navbar.js","components/Dashboard.js","reducers/playback.js","reducers/cache.js","reducers/rootReducer.js","components/App.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["module","exports","primaryTheme","spotifygreen","spotifydarkgray","spotifydarkgray2","login","background","white","fontFamily","playlists","colorsMap","bgColor","Math","floor","random","length","PageContainer","styled","div","props","theme","LoginContainer","ColorContainer","LoginImage","splashscreen","Login","LoginButton","button","LoginPageText","h2","Notices","p","className","id","role","aria-label","href","rgbToHex","r","g","b","converter","c","hex","toString","catchErrors","fn","catch","err","console","error","setLocalAccessToken","token","window","localStorage","setItem","Date","now","getLocalRefreshToken","getItem","refreshAccessToken","a","axios","get","data","access_token","location","reload","getAccessToken","e","hashParams","q","hash","substring","exec","decodeURIComponent","getHashParams","refresh_token","warn","localAccessToken","localRefreshToken","logout","removeItem","headers","Authorization","getPlaylists","params","limit","getPlaylist","playlistId","getAudioFeaturesForTracks","tracks","ids","map","track","join","getTrackIds","PlaylistItem","PlaylistCoverContainer","PlaylistCover","image","link","name","to","style","alt","Loader","Spinner","PlaylistsGridContainer","PlaylistsHeader","PlaylistsGrid","Playlists","state","networkRequestMade","this","getData","Object","keys","cache","log","setState","cachePlaylists","items","playlist","PlaylistContainer","key","images","url","defaultPlaylistCover","React","Component","connect","dispatch","type","PlaylistHeaderContainer","PlaylistInfo","PlaylistTitle","h1","SubHeader","PlaylistCreator","h3","OpenWithSpotify","PlaylistHeader","ownerUrl","ownerName","spotifyUrl","src","PlayButtonStyle","img","nowPlaying","PlayButton","albumArt","uri","trackName","playOnKeyDown","playOnClick","soundIcon","playIcon","tabIndex","onKeyDown","event","onClick","PlaylistItems","table","TableText","Playlist","formatTime","ms","secs","minutes","parseInt","secsLeft","slice","handlePlay","bind","audioFeatures","combined","paused","audio_features","reduce","obj","item","acousticness","danceability","energy","instrumentalness","speechiness","temp","tempo","valence","trackArtist","artists","trackLength","duration_ms","album","albumName","merge","playback","pauseTrack","playTrack","owner","external_urls","spotify","display_name","idx","playerReady","trackObject","NowPlaying","NowPlayingText","lightText","color","ControlsContainer","CircularContainer","TogglePlay","Controls","togglePlayback","border","pauseIcon","filter","AlbumArt","PlayerSection","StandardPlayer","CloudyDayClubLogo","Player","handleLoadSuccess","handleLoadFailure","cb","nodeRef","createRef","currentPosition","onSpotifyWebPlaybackSDKReady","prevProps","prevState","executePlaySong","scriptLoaded","player","Spotify","getOAuthToken","addListener","message","device_id","deviceId","setPlayerReady","scriptError","trackUri","body","uris","put","togglePlay","resumeTrack","onCreate","handleScriptCreate","onError","handleScriptError","onLoad","handleScriptLoad","PlayerPageContainer","PlayerContainer","albumArtUrl","post","resp","rgb","isDark","getAlbumColor","ref","backgroundColor","undefined","NavigationContainer","NavIcon","LogoutIcon","Navigation","nav","Navbar","playlistsIcon","logoutIcon","transform","DashboardContainer","NavbarContainer","InterfaceContainer","Dashboard","path","playbackReducerDefaultState","defaultColor","albumColors","cacheReducerDefaultState","combineReducers","action","store","createStore","rootReducer","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,oD,mBCA3CD,EAAOC,QAAU,IAA0B,gD,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,iD,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,gLCA9BC,EAAe,CAC1BC,aAAc,UACdC,gBAAiB,OACjBC,iBAAkB,UAClBC,MAAO,CACLC,WAAY,UACZC,MAAO,QACPC,WAAY,oBAEfC,UAAW,CACTD,WAAY,yB,iBCJTE,EAAY,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,WAGIC,EAAUD,EADJE,KAAKC,MAAMD,KAAKE,SAAYJ,EAAUK,SAQ5CC,EAAgBC,IAAOC,IAAV,uEAAGD,CAAH,+GAOH,SAAAE,GAAK,OAAIA,EAAMC,MAAMf,MAAMC,cAGrCe,EAAiBJ,IAAOC,IAAV,wEAAGD,CAAH,8EAQdK,EAAiBL,IAAOC,IAAV,wEAAGD,CAAH,gIAKJN,GAKVY,EAAaN,IAAOC,IAAV,oEAAGD,CAAH,0LACIO,KAUdC,EAAQR,IAAOC,IAAV,wDAAGD,CAAH,mVAKA,SAAAE,GAAK,OAAIA,EAAMC,MAAMf,MAAME,QAMf,SAUjBmB,EAAcT,IAAOU,OAAV,qEAAGV,CAAH,sOACD,SAAAE,GAAK,OAAIA,EAAMC,MAAMlB,gBAe/B0B,EAAgBX,IAAOY,GAAV,uEAAGZ,CAAH,2CAKba,EAAUb,IAAOc,EAAV,iEAAGd,CAAH,gKAOU,SAKR,oBACb,kBAAC,IAAD,CAAeG,MAAOnB,GACpB,kBAACe,EAAD,KACI,kBAACM,EAAD,CAAgBU,UAAU,YAC1B,kBAACX,EAAD,CAAgBW,UAAU,qBACxB,kBAACP,EAAD,KACE,wBAAIQ,GAAG,oBAAoBD,UAAU,cACnC,0BAAME,KAAK,MAAMC,aAAW,SAA5B,gBADF,aAGA,kBAACP,EAAD,CAAeI,UAAU,cAAzB,QACO,0BAAMA,UAAU,gBAAhB,qBADP,qBAEE,6BACE,0BAAMA,UAAU,cACd,0BAAMA,UAAU,iBAAhB,MACA,0BAAMA,UAAU,eAAhB,KACA,0BAAMA,UAAU,gBAAhB,KACA,0BAAMA,UAAU,iBAAhB,KACA,0BAAMA,UAAU,iBAAhB,KACA,0BAAMA,UAAU,cAAhB,OATN,0BAaA,uBAAGI,KArHT,8CAqH0BJ,UAAU,gBAC5B,kBAACN,EAAD,oCAIF,kBAACI,EAAD,CAASE,UAAU,gBAAnB,4BAEA,6BACE,uBAAGI,KAAK,oFAAR,2EAGF,6BANA,gEASN,kBAACb,EAAD,CAAYU,GAAG,mB,gECrJRI,EAAW,SAAC,GAAe,IAAD,mBAAbC,EAAa,KAAVC,EAAU,KAAPC,EAAO,KAC/BC,EAAY,SAACC,GACjB,IAAMC,EAAMD,EAAEE,SAAS,IACvB,OAAsB,IAAfD,EAAI5B,OAAe,IAAM4B,EAAMA,GAExC,MAAO,IAAMF,EAAUH,GAAKG,EAAUF,GAAKE,EAAUD,IAmB1CK,EAAc,SAAAC,GACzB,OAAO,WACL,OAAOA,EAAE,WAAF,aAAYC,OAAM,SAAAC,GACvBC,QAAQC,MAAMF,QClBdG,EAAsB,SAAAC,GADIC,OAAOC,aAAaC,QAAQ,0BAA2BC,KAAKC,OAG1FJ,OAAOC,aAAaC,QAAQ,uBAAwBH,IAKhDM,EAAuB,kBAAML,OAAOC,aAAaK,QAAQ,0BAGzDC,EAAkB,uCAAG,gCAAAC,EAAA,+EAEAC,IAAMC,IAAN,uCAA0CL,MAF1C,uBAEfM,EAFe,EAEfA,KACAC,EAAiBD,EAAjBC,aACRd,EAAoBc,GACpBZ,OAAOa,SAASC,SALO,qDAQvBlB,QAAQC,MAAR,MARuB,0DAAH,qDAaXkB,EAAiB,WAAO,IAAD,EDpBP,WAK3B,IAJA,IACIC,EADEC,EAAa,GAEbhC,EAAI,uBACJiC,EAAIlB,OAAOa,SAASM,KAAKC,UAAU,GACjCJ,EAAI/B,EAAEoC,KAAKH,IACjBD,EAAWD,EAAE,IAAMM,mBAAmBN,EAAE,IAE1C,OAAOC,ECawCM,GAAvC1B,EAD0B,EAC1BA,MAAOe,EADmB,EACnBA,aAAcY,EADK,EACLA,cAEzB3B,IACFD,QAAQC,MAAM,cAAeA,GAC7BU,KAIEJ,KAAKC,MA3BqBJ,OAAOC,aAAaK,QAAQ,2BARpC,OAoCpBV,QAAQ6B,KAAK,2CACblB,KAGF,IAjC2BR,EAiCrB2B,EA/B0B1B,OAAOC,aAAaK,QAAQ,wBAgCtDqB,EAAoBtB,IAQ1B,OALKsB,GAA2C,cAAtBA,IArCC5B,EAsCJyB,EAtCaxB,OAAOC,aAAaC,QAAQ,wBAAyBH,IA0CpF2B,GAAyC,cAArBA,EAKlBA,GAJL5B,EAAoBc,GACbA,IAMEb,EAAQgB,IAERa,EAAS,WACpB5B,OAAOC,aAAa4B,WAAW,2BAC/B7B,OAAOC,aAAa4B,WAAW,wBAC/B7B,OAAOC,aAAa4B,WAAW,yBAC/B7B,OAAOa,SAlEH,yCAuEAiB,EAAU,CACdC,cAAc,UAAD,OAAYhC,GACzB,eAAgB,oBAaLiC,EAAe,kBAC5BvB,IAAMC,IACJ,0CAA2C,CACzCuB,OAAQ,CACRC,MAAO,IAETJ,aAOWK,EAAc,SAAAC,GAAU,OACnC3B,IAAMC,IAAN,+CAAkD0B,GAAc,CAAEN,aAkBvDO,EAA4B,SAAAC,GACvC,IAAMC,EAPY,SAAAD,GAAM,OAAIA,EAAOE,KAAI,qBAAGC,MAAkB7D,MAAI8D,KAAK,KAOzDC,CAAYL,GACxB,OAAO7B,IAAMC,IAAN,wDAA2D6B,GAAO,CAAET,a,QC1HvEc,EAAehF,IAAOC,IAAV,sFAAGD,CAAH,+IASZiF,EAAyBjF,IAAOC,IAAV,gGAAGD,CAAH,sCAKtBkF,EAAgBlF,IAAOC,IAAV,uFAAGD,CAAH,gDAMJ,kBAAEmF,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAMC,EAAf,EAAeA,KAAf,OACb,kBAACL,EAAD,KACE,kBAAC,IAAD,CAAMM,GAAIF,GACR,kBAACH,EAAD,KACE,kBAACC,EAAD,CAAenE,UAAU,iBACvBwE,MAAO,CAAClG,WAAW,OAAD,OAAS8F,GAAgB,GAAzB,MAClBK,IAAKH,MAIX,kBAAC,IAAD,CAAMC,GAAIF,EAAMrE,UAAU,iBAAiBsE,K,iBC/BzCI,GAASzF,IAAOC,IAAV,6DAAGD,CAAH,2EAQN0F,GAAU1F,IAAOC,IAAV,sEAAGD,CAAH,MAGE,qBACd,kBAACyF,GAAD,KACC,kBAACC,GAAD,CAAS3E,UAAU,mBACjB,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,oBCRb4E,GAAyB3F,IAAOC,IAAV,oFAAGD,CAAH,sHAUtB4F,GAAiB5F,IAAOY,GAAT,6EAAEZ,CAAF,yGAOf6F,GAAe7F,IAAOC,IAAT,2EAAED,CAAF,gGAOb8F,G,kDACJ,WAAY5F,GAAO,IAAD,8BAChB,cAAMA,IACD6F,MAAQ,CACXC,oBAAoB,GAHN,E,gEAQhBpE,EAAYqE,KAAKC,WACsC,IAAnDC,OAAOC,KAAKH,KAAK/F,MAAMmG,MAAM7G,WAAWM,SAC1CkC,QAAQsE,IAAI,mBACZ1E,EAAYqE,KAAKC,c,kKAKI9B,I,gBAAfrB,E,EAAAA,KACRkD,KAAKM,SAAS,CAAE/G,UAAWuD,EAAMiD,oBAAoB,IACrDC,KAAK/F,MAAMsG,eAAe,CAAEhH,UAAWuD,I,qIAG/B,IACFvD,EAAcyG,KAAKF,MAAnBvG,UASN,OANqD,IAAnD2G,OAAOC,KAAKH,KAAK/F,MAAMmG,MAAM7G,WAAWM,QACpCmG,KAAKF,MAAMC,qBAEfxG,EAAYyG,KAAK/F,MAAMmG,MAAM7G,WAI7B,kBAACmG,GAAD,KACE,kBAACC,GAAD,kBACGpG,EACC,kBAACqG,GAAD,CAAe7E,GAAG,iBACjBxB,EAAUiH,MAAM7B,KAAI,SAAC8B,GAAD,OACnB,kBAACC,EAAD,CACEC,IAAKF,EAAS1F,GACdoE,KAAI,mBAAcsB,EAAS1F,IAC3BqE,KAAMqB,EAASrB,KACfF,MAC6B,IAA3BuB,EAASG,OAAO/G,OACd4G,EAASG,OAAO,GAAGC,IACnBC,UAIR,kBAAC,GAAD,W,GAjDYC,IAAMC,WAgEfC,gBATS,SAACnB,GAEvB,MAAO,CAAEM,MADSN,EAAVM,UAIiB,SAACc,GAAD,MAAe,CACxCX,eAAgB,SAAChH,GAAD,OAAe2H,EC/Fe,CAC9CC,KAAM,kBACN5H,UD6FuDA,EC/FzBA,gBDkGjB0H,CAA6CpB,I,SE/FtDuB,GAA0BrH,IAAOC,IAAV,0FAAGD,CAAH,4GAYvBsH,GAAetH,IAAOC,IAAV,+EAAGD,CAAH,oGAUZuH,GAAgBvH,IAAOwH,GAAV,gFAAGxH,CAAH,+IASbyH,GAAYzH,IAAOC,IAAV,4EAAGD,CAAH,0BAIT0H,GAAkB1H,IAAO2H,GAAV,kFAAG3H,CAAH,+KAcf4H,GAAkB5H,IAAO4C,EAAV,kFAAG5C,CAAH,mFAMR6H,GAAiB,SAAC,GAAD,IAAExC,EAAF,EAAEA,KAAMF,EAAR,EAAQA,MAAO2C,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,UAAWC,EAApC,EAAoCA,WAApC,OAC5B,kBAACX,GAAD,KACE,yBAAK7B,IAAG,6BAAwBH,GAAQ4C,IAAK9C,IAC7C,kBAACmC,GAAD,KAEE,kBAACC,GAAD,KAAgBlC,GAEhB,kBAACoC,GAAD,KACE,kBAACC,GAAD,YACA,uBAAGvG,KAAM2G,GACNC,IAEH,kBAACH,GAAD,CAAiBzG,KAAM6G,GAAvB,uC,wCCjEFE,GAAkBlI,IAAOmI,IAAV,kFAAGnI,CAAH,kBACR,SAAAE,GAAK,OAAIA,EAAMkI,WAAa,MAAQ,OAGpCC,GAAa,SAAC,GAAD,IAAED,EAAF,EAAEA,WAAYE,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,IAAKC,EAA7B,EAA6BA,UAAWC,EAAxC,EAAwCA,cAAeC,EAAvD,EAAuDA,YAAvD,OACxB,kBAACR,GAAD,CACE1C,IAAI,YACJ4C,WAAYA,EACZH,IAAKG,EAAaO,KAAYC,KAC9BC,SAAU,EACVC,UAAW,SAACC,GACO,UAAdA,EAAMnC,KACP6B,EAAcH,EAAUC,EAAKC,IAGjCQ,QAAS,kBAAMN,EAAYJ,EAAUC,EAAKC,O,oBCNxCS,GAAgBjJ,IAAOkJ,MAAV,0EAAGlJ,CAAH,wsBA+DbmJ,GAAYnJ,IAAOC,IAAV,sEAAGD,CAAH,wFAQToJ,G,kDACJ,WAAYlJ,GAAO,IAAD,8BAChB,cAAMA,IA4DRmJ,WAAa,SAAAC,GACX,IAAMC,EAAQD,EAAK,IACbE,EAAUC,SAASF,EAAO,IAC5BG,EAAWD,SAASF,EAAgB,GAARC,GAGhC,OAFAE,GAAY,IAAMA,GAAUC,OAAO,GACvB,UAAMH,EAAN,YAAiBE,IAhE7B,EAAKE,WAAa,EAAKA,WAAWC,KAAhB,iBAClB,EAAK9D,MAAQ,CACXW,SAAU,KACVhC,OAAQ,KACRoF,cAAe,KACfC,SAAU,GACVC,QAAQ,GARM,E,gEAahBpI,EAAYqE,KAAKC,a,uKAIT1B,EAAeyB,KAAK/F,MAApBsE,W,SACeD,EAAYC,G,mBAA3BzB,E,EAAAA,KACRkD,KAAKM,SAAS,CAAEG,SAAU3D,KAEtBA,E,wBACM2D,EAAaT,KAAKF,MAAlBW,S,UACejC,EAA0BiC,EAAShC,OAAO+B,O,iBAAzD1D,E,EAAAA,KAEF+G,EAAgB/G,EAAKkH,eAAeC,QAAO,SAACC,EAAKC,GAAN,OAC/CD,EAAIC,EAAKpJ,IAAM,CACbqJ,aAAcD,EAAKC,aACnBC,aAAcF,EAAKE,aACnBC,OAAQH,EAAKG,OACbC,iBAAkBJ,EAAKI,iBACvBC,YAAaL,EAAKK,YAClBC,KAAMN,EAAKO,MACXC,QAASR,EAAKQ,SAEbT,IAAM,IAGLzF,EAASgC,EAAShC,OAAO+B,MAAM7B,KAAI,qBAAEC,SAAgBqF,QAAO,SAACC,EAAKC,GAAN,OAChED,EAAIC,EAAKpJ,IAAM,CACb6J,YAAaT,EAAKU,QAAQ,GAAGzF,KAC7B0F,YAAaX,EAAKY,YAClBxC,UAAW4B,EAAK/E,KAChBiD,SAAU8B,EAAKa,MAAMpE,OAAO,GAAGC,IAC/BoE,UAAWd,EAAKa,MAAM5F,MAErB8E,IAAM,IAGXnI,QAAQsE,IAAI5B,EAAQoF,GAEdC,EAAWoB,KAAMzG,EAAQoF,GAE/B7D,KAAKM,SAAS,CACZuD,cAAe/G,EACfgH,a,wIAeKzB,EAAUC,EAAKlD,GAGnBY,KAAK/F,MAAMkL,SAASC,YACvBpF,KAAK/F,MAAMkL,SAAS7C,MAAQA,GAG5BtC,KAAK/F,MAAMoL,UAAU,CACnBhD,WACAC,MACAlD,W,+BAKI,IAAD,SACwBY,KAAKF,MAA5BgE,EADD,EACCA,SAAUrD,EADX,EACWA,SAElB,OACE,6BACGA,EACG,kBAAC,GAAD,CACErB,KAAMqB,EAASrB,KACfF,MAC6B,IAA3BuB,EAASG,OAAO/G,OACd4G,EAASG,OAAO,GAAGC,IACnBC,IACJe,SAAUpB,EAAS6E,MAAMC,cAAcC,QACvC1D,UAAWrB,EAAS6E,MAAMG,aAC1B1D,WAAYtB,EAAS8E,cAAcC,UAErC,kBAAC,GAAD,MAC8B,IAAjCtF,OAAOC,KAAK2D,GAAUjK,OACnB,yBAAKiB,UAAU,cACb,kBAACkI,GAAD,KACE,+BACE,4BACE,6BACA,oCACA,sCACA,wCAGJ,+BACG9C,OAAOC,KAAK2D,GAAUnF,KAAI,SAACgC,EAAK+E,GAAN,OACvB,wBAAI/E,IAAKA,GACP,4BACG,EAAK1G,MAAMkL,SAASQ,YACjB,kBAAC,GAAD,CACIxD,WAAY,EAAKlI,MAAMkL,SAAS7C,MAAQ3B,EACxC0B,SAAUyB,EAASnD,GAAK0B,SACxBC,IAAK3B,EACL4B,UAAWuB,EAASnD,GAAK4B,UACzBC,cAAe,EAAKmB,WAAWC,KAAK,GACpCnB,YAAa,EAAKkB,WAAWC,KAAK,KAEtC,yBAAKrE,IAAI,oBAAoByC,IAAKW,QAExC,4BAAI,kBAACO,GAAD,KAAYY,EAASnD,GAAK4B,YAC9B,4BAAI,kBAACW,GAAD,KAAYY,EAASnD,GAAKiE,cAC9B,4BAAK,EAAKxB,WAAWU,EAASnD,GAAKmE,qBAM7C,kBAAC,GAAD,W,GAzIS9D,aAwJRC,gBATS,SAACnB,GAEvB,MAAO,CAAEqF,SADmBrF,EAApBqF,SACW/E,MADSN,EAAVM,UAIO,SAACc,GAAD,MAAe,CACxCmE,UAAW,SAACO,GAAD,OAAiB1E,EC1OuB,CACnDC,KAAM,aACNkB,UAFwB,ED0OuBuD,GC1OtBvD,SAGzBC,IAHuB,EAAYA,IAInClD,KAJuB,EAAiBA,OAAjB,IAAC,MD6OX6B,CAA6CkC,I,wCE1OtD0C,GAAa9L,IAAOwH,GAAV,iFAAGxH,CAAH,4HAQH+L,GAAiB,SAAC,GAAD,IAAEC,EAAF,EAAEA,UAAWxD,EAAb,EAAaA,UAAb,OAC5B,kBAACsD,GAAD,CACEvG,MAAO,CAAE0G,MAAM,GAAD,OAAKD,EAAY,QAAU,WAE1B,KAAdxD,EAAmB,6BAA+BA,I,wCCVjD0D,GAAoBlM,IAAOC,IAAV,8EAAGD,CAAH,qDAMjBmM,GAAoBnM,IAAOC,IAAV,8EAAGD,CAAH,qJAcjBoM,GAAapM,IAAOmI,IAAV,uEAAGnI,CAAH,0BAKHqM,GAAW,SAAC,GAAD,IAAEL,EAAF,EAAEA,UAAWM,EAAb,EAAaA,eAAgBtC,EAA7B,EAA6BA,OAA7B,OACtB,kBAACkC,GAAD,KACE,kBAACC,GAAD,CACE5G,MAAO,CACLgH,OAAO,GAAD,OACJP,EACE,kBACA,oBAENhD,QAAS,kBAAMsD,KACfxD,UAAW,SAACC,GACO,UAAdA,EAAMnC,KACP0F,MAIJ,kBAACF,GAAD,CACEvD,SAAU,EACVZ,IAAK+B,EACDpB,KACA4D,KAEJjH,MAAO,CACLkH,OAAO,GAAD,OACJT,EACE,0BACA,uBClDRU,GAAW1M,IAAOmI,IAAV,8EAAGnI,CAAH,yCAMR2M,GAAgB3M,IAAOC,IAAV,mFAAGD,CAAH,oEAON4M,GAAiB,SAAC,GAAD,IAAEtE,EAAF,EAAEA,SAAU0D,EAAZ,EAAYA,UAAWxD,EAAvB,EAAuBA,UAAWD,EAAlC,EAAkCA,IAAKyB,EAAvC,EAAuCA,OAAQ4B,EAA/C,EAA+CA,YAAaU,EAA5D,EAA4DA,eAA5D,OAC5B,kBAACK,GAAD,CAAe5L,UAAU,cACvB,kBAAC2L,GAAD,CAAU1L,GAAG,YACXiH,IACEK,GAEEuE,OAEN,kBAAC,GAAD,CACEb,UAAWA,EACXxD,UAAWA,IAEZoD,GAAuB,KAARrD,EACZ,kBAAC,GAAD,CACEyD,UAAWA,EACXM,eAAgBA,EAChBtC,OAAQA,IAEV,gCC9BF8C,G,kDACJ,WAAY5M,GAAQ,IAAD,8BACjB,cAAMA,IACD6M,kBAAoB,EAAKA,kBAAkBlD,KAAvB,iBACzB,EAAKmD,kBAAoB,EAAKD,kBAAkBlD,KAAvB,iBACzB,EAAKyC,eAAiB,EAAKA,eAAezC,KAApB,iBACtB,EAAKoD,GAAK,EAAKA,GAAGpD,KAAR,iBACV,EAAKqD,QAAUlG,IAAMmG,UAAU,MAC/B,EAAKpH,MAAQ,CACX6F,aAAa,EACbpD,UAAW,GACX4E,gBAAiB,GAVF,E,gEAcE,IAAD,OAClBhL,OAAOiL,6BAA+B,WACpC,EAAKN,uB,yCAIUO,EAAWC,GACI,KAA5BtH,KAAK/F,MAAMkL,SAAS7C,KAAc+E,EAAUlC,SAAS7C,MAAQtC,KAAK/F,MAAMkL,SAAS7C,KACnFtC,KAAKuH,gBAAgBvH,KAAK/F,MAAMkL,SAAS7C,O,wKAK3CtC,KAAKM,SAAS,CAAEkH,cAAc,I,SACVtK,I,OAAdhB,E,OACN8D,KAAKyH,OAAS,IAAItL,OAAOuL,QAAQb,OAAO,CACtCzH,KAAM,sCACNuI,cAAe,SAAAX,GAAQA,EAAG9K,MAI5B8D,KAAKyH,OAAOG,YAAY,wBAAwB,YAAkB,IAAfC,EAAc,EAAdA,QAAgB9L,QAAQC,MAAM6L,MACjF7H,KAAKyH,OAAOG,YAAY,wBAAwB,YAAkB,IAAfC,EAAc,EAAdA,QAAgB9L,QAAQC,MAAM6L,MACjF7H,KAAKyH,OAAOG,YAAY,iBAAiB,YAAkB,IAAfC,EAAc,EAAdA,QAAgB9L,QAAQC,MAAM6L,MAC1E7H,KAAKyH,OAAOG,YAAY,kBAAkB,YAAkB,IAAfC,EAAc,EAAdA,QAAgB9L,QAAQC,MAAM6L,MAG3E7H,KAAKyH,OAAOG,YAAY,wBAAwB,SAAA9H,GAC1CA,GACF,EAAKQ,SAAS,CAAEyD,OAAQjE,EAAMiE,YAKlC/D,KAAKyH,OAAOG,YAAY,SAAS,YAAoB,IAAjBE,EAAgB,EAAhBA,UAClC,EAAKxH,SAAS,CAAEqF,aAAa,IAC7B,EAAKoC,SAAWD,EAChB/L,QAAQsE,IAAI,uBAAwByH,GACpC,EAAK7N,MAAM+N,oBAIbhI,KAAKyH,OAAOG,YAAY,aAAa,YAAoB,IAAjBE,EAAgB,EAAhBA,UACtC/L,QAAQsE,IAAI,6BAA8ByH,MAI5C9H,KAAKyH,OAAOxG,U,gIAGX/E,GACD,OAAOA,I,2CAIP8D,KAAKM,SAAS,CAAEkH,cAAc,IAC9BzL,QAAQsE,IAAI,oB,0CAIZL,KAAKM,SAAS,CAAE2H,aAAa,IAC7BlM,QAAQsE,IAAI,kB,yCAIZL,KAAKM,SAAS,CAAEkH,cAAc,IAC9BzL,QAAQsE,IAAI,mB,sCAGEiC,GACVtC,KAAK+H,UZ8FY,SAACG,EAAUH,GAClC,IAAMlH,EAAG,8DAA0DkH,GAC7DI,EAAO,CAAEC,KAAM,CAAC,iBAAD,OAAkBF,KAChCtL,IAAMyL,IAAIxH,EAAKsH,EAAM,CAAClK,YYhGzBoH,CAAU/C,EAAKtC,KAAK+H,Y,uCAKtB/H,KAAKyH,OAAOa,aACZtI,KAAK/F,MAAMqO,e,2CZ4GY,SAACP,GAC3B,IACMI,EAAO,CAAEL,UAAWC,GACnBnL,IAAMyL,IAFJ,4CAEaF,EAAM,CAAClK,YY3G1BsK,CAAYvI,KAAK+H,Y,+BAIjB,OACE,6BACI,kBAAC,GAAD,CACI1F,SAAUrC,KAAK/F,MAAMkL,SAAS9C,SAC9B0D,UAAW/F,KAAK/F,MAAM8L,UACtBxD,UAAWvC,KAAK/F,MAAMkL,SAAS5C,UAC/BoD,YAAa3F,KAAKF,MAAM6F,YACxBrD,IAAKtC,KAAK/F,MAAMkL,SAAS7C,IACzByB,OAAQ/D,KAAKF,MAAMiE,OACnBsC,eAAgBrG,KAAKqG,eAAezC,KAAK5D,QAE/C,gCACE,kBAAC,KAAD,CACEa,IAAI,wCACJ2H,SAAUxI,KAAKyI,mBAAmB7E,KAAK5D,MACvC0I,QAAS1I,KAAK2I,kBAAkB/E,KAAK5D,MACrC4I,OAAQ5I,KAAK6I,iBAAiBjF,KAAK5D,c,GApH1BgB,aAsINC,gBALS,SAACnB,GAEvB,MAAO,CAAEqF,SADYrF,EAAbqF,aANiB,SAACjE,GAAD,MAAe,CACxC8G,eAAgB,kBAAM9G,EJrHd,CACNC,KAAM,sBIqHRmH,WAAY,kBAAMpH,EJhHV,CACNC,KAAM,oBIuHKF,CAA6C4F,ICnItDiC,GAAsB/O,IAAOC,IAAV,2FAAGD,CAAH,kOAUnBgP,G,kDACJ,WAAY9O,GAAQ,IAAD,8BACjB,cAAMA,IACDgN,QAAUlG,IAAMmG,UAAU,MAC/B,EAAKpH,MAAQ,CACXkG,MAjBe,UAkBfD,WAAW,GALI,E,mGAUCiD,G,6FCxBenI,EDyBKmI,ECzBGpM,IAAMqM,KAF7C,+CAE8D,CAACpI,Q,ODyB7DqI,E,OACElD,EAAQ7K,EAAS+N,EAAKpM,MdrBFrD,EcsBMyP,EAAKpM,KAA/BiJ,EdtBgCC,IAAMmD,IAAI1P,GAAS2P,ScuBnD7G,EAAYvC,KAAK/F,MAAMkL,SAAS5C,UACtCvC,KAAKM,SAAS,CAAC0F,QAAOD,YAAWxD,c,iCdxBR,IAAC9I,EeLOoH,I,4GDgChBwG,EAAWC,GAC5B,GAAID,EAAUlC,SAAS7C,MAAQtC,KAAK/F,MAAMkL,SAAS7C,IAAK,CACtD,IAAM0G,EAAchJ,KAAK/F,MAAMkL,SAAS9C,SACpC2G,IAAgB3B,EAAUlC,SAAS9C,UACrC1G,EAAYqE,KAAKqJ,cAAcL,SAIxB3B,EAAUlC,SAAS7C,MAAQtC,KAAK/F,MAAMkL,SAAS7C,KACpDtC,KAAKF,MAAMkG,Q,+BAQjB,OACE,kBAAC8C,GAAD,CACEQ,IAAKtJ,KAAKiH,QACV3H,MAAO,CACLiK,gBAAgB,GAAD,OAAKvJ,KAAKF,MAAMkG,SAGjC,kBAAC,GAAD,CAAQD,UAAW/F,KAAKF,MAAMiG,iB,GA3CR/E,aAsDfC,gBALS,SAACnB,GAEvB,MAAO,CAAEqF,SADYrF,EAAbqF,iBAI8BqE,EAAzBvI,CAAoC8H,I,wCEnE7CU,GAAsB1P,IAAOC,IAAV,gFAAGD,CAAH,oDAOnB2P,GAAU3P,IAAOC,IAAV,oEAAGD,CAAH,wTAwBP4P,GAAa5P,IAAOC,IAAV,uEAAGD,CAAH,wTAwBV6P,GAAa7P,IAAO8P,IAAV,uEAAG9P,CAAH,wEA8BD+P,GAtBA,kBACb,kBAACL,GAAD,KACE,kBAACG,GAAD,CAAY9O,UAAU,cACpB,kBAAC4O,GAAD,KACE,kBAAC,IAAD,CAAMrK,GAAG,IAAIvE,UAAU,YACrB,yBAAKkH,IAAK+H,KAAexK,IAAI,eAE/B,yCAEF,kBAACoK,GAAD,KACE,kBAAC,IAAD,CAAMtK,GAAG,IAAI0D,QAAShF,EAAQjD,UAAU,YACtC,yBAAKkH,IAAKgI,KAAYzK,IAAI,SAC1BD,MAAO,CACL2K,UAAU,qBAGd,yCC7EFC,GAAqBnQ,IAAOC,IAAV,gFAAGD,CAAH,2CAMlBoQ,GAAkBpQ,IAAOC,IAAV,6EAAGD,CAAH,mJASL,SAAAE,GAAK,OAAIA,EAAMC,MAAMjB,mBAG/BmR,GAAqBrQ,IAAOC,IAAV,gFAAGD,CAAH,2EAwBTsQ,GAjBG,kBAChB,kBAAC,IAAD,CAAenQ,MAAOnB,GACpB,kBAACmR,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,OAEF,kBAACC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAWE,KAAK,MAChB,kBAAC,GAAD,CAAUA,KAAK,4BAGnB,kBAAC,GAAD,S,kBC9CAC,GAA8B,CAClC5E,aAAa,EACbP,YAAY,EACZ9C,IAAK,GACLD,SAAU,GACVmI,aAAc,UACdC,YAAa,GACblI,UAAW,ICPPmI,GAA2B,CAC/BnR,UAAW,ICIEoR,gBAAgB,CAC7BxF,SFIa,WAAkD,IAAjDrF,EAAgD,uDAAxCyK,GAA6BK,EAAW,uCAC9D,OAAQA,EAAOzJ,MACb,IAAK,cACH,OAAY,6BACPrB,GADO,IAEVsF,YAAatF,EAAMsF,aAEvB,IAAK,mBACH,OAAY,6BACPtF,GADO,IAEV6F,aAAa,IAEjB,IAAK,aACH,OAAY,6BACP7F,GADO,IAEVsF,YAAY,EACZ9C,IAAKsI,EAAOtI,IACZD,SAAUuI,EAAOvI,SACjBE,UAAWqI,EAAOxL,OAEtB,QACE,OAAOU,IExBXM,MDHa,WAA+C,IAA9CN,EAA6C,uDAArC4K,GAA0BE,EAAW,uCAC3D,OAAQA,EAAOzJ,MACb,IAAK,kBACH,MAAe,CACb5H,UAAWqR,EAAOrR,WAEtB,QACE,OAAOuG,MEHP+K,I,MCHUC,aAAYC,KD6BbC,G,4MAvBblL,MAAQ,CACN5D,MAAO,I,kEAIP8D,KAAKM,SAAS,CAAEpE,Y,+BAGR,IACAA,EAAU8D,KAAKF,MAAf5D,MAER,OACE,6BACGA,EACC,kBAAC,IAAD,CAAU2O,MAAOA,IACf,kBAAC,GAAD,OAEE,kBAAC,EAAD,W,GAlBI9J,IAAMC,WEEJiK,QACW,cAA7B9O,OAAOa,SAASkO,UAEe,UAA7B/O,OAAOa,SAASkO,UAEhB/O,OAAOa,SAASkO,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdjQ,OAAM,SAAAG,GACLD,QAAQC,MAAMA,EAAM6L,c","file":"static/js/main.3a4ebf32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-playlist-cover.a5d25457.svg\";","module.exports = __webpack_public_path__ + \"static/media/play-icon-circular.648136cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/splashscreen.806ccd56.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sound-icon-circular.14bd46c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.6ddf2258.svg\";","module.exports = __webpack_public_path__ + \"static/media/play-icon.718f9d87.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause-icon.93c1a16b.svg\";","module.exports = __webpack_public_path__ + \"static/media/list-icon.64135525.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout-icon.144ff030.svg\";","export const primaryTheme = {\n  spotifygreen: '#1BB954',\n  spotifydarkgray: '#111',\n  spotifydarkgray2: '#1B1B1B',\n  login: {\n    background: '#1B1B1B',\n    white: 'white',\n    fontFamily: 'ProximaNova-Bold'\n },\n playlists: {\n   fontFamily: 'ProximaNova-SemiBold'\n }\n}\n\nexport const darkTheme = {\n  primary: 'gray',\n}\n\n","import React  from 'react';\nimport styled, {ThemeProvider} from 'styled-components/macro';\nimport { primaryTheme } from '../styles/themes';\nimport splashscreen from '../static/splashscreen.jpg'\n\n// 7 colors that can be randomly applied\nconst colorsMap = [\n  '#cc7ae2', // purple\n  '#5d86ba', // blue\n  '#12adea', // indigo\n  '#7ea04d', // green\n  '#f97116', // orange\n  '#f74040', // red\n  '#d54062', // magenta\n]\nconst idx = Math.floor(Math.random() * (colorsMap.length));\nconst bgColor = colorsMap[idx]\n\nconst LOGIN_URI =\n  process.env.NODE_ENV !== 'production'\n    ? 'http://localhost:8888/login'\n    : 'https://cloudy-day-club.herokuapp.com/login';\n\nconst PageContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  display: flex;\n  flex-wrap: nowrap;\n  background: ${props => props.theme.login.background};\n`\n\nconst LoginContainer = styled.div`\n  height: 100%;\n  padding: 0rem 0rem;\n  display: flex;\n  align-items: center;\n  z-index: 3;\n`\n\nconst ColorContainer = styled.div`\n  height: 100%;\n  display: flex;\n  width: 100%;\n  overflow-y: hidden;\n  background: ${bgColor};\n  position: absolute;\n  filter: brightness(.8) saturate(0.5);\n`\n\nconst LoginImage = styled.div`\n  background: url(${splashscreen});\n  background-size: cover !important;                 \n  background-repeat: no-repeat !important;\n  background-position: center center !important;   \n  width: 50%;\n  height: 100%;\n  flex-grow: 1;\n  z-index: 3;\n`\n\nconst Login = styled.div`\n  width: 100%;\n  height: 50%;\n  padding: 4rem;\n  overflow: hidden;\n  color: ${props => props.theme.login.white};\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n  margin: 0;\n  h1 { margin: 0; font-size: 4.5rem; }\n  h2 { margin: 0; font-size: 1.75rem; }\n\n  @media (max-width: ${'768px'}) {\n    text-align: center;\n    padding: 1rem;\n    margin: 0 auto;\n    height: 75%;\n    h1 { margin: 0 auto; font-size: 3rem; }\n    h2 { margin: 0 auto; font-size: 1rem; }\n  }\n`\n\nconst LoginButton = styled.button`\n  background: ${props => props.theme.spotifygreen};\n  color: white;\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n  font-weight: bold;\n  font-size: 1rem;\n  padding: 1rem 2rem;\n  margin: 1rem 0rem;\n  border: none;\n  border-radius: 2rem;\n  cursor: pointer;\n  &:hover {\n    background: #02A03B;\n  }\n`\n\nconst LoginPageText = styled.h2`\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n`\n\nconst Notices = styled.p`\n  color: white;\n  a { color: white;}\n  font-weight: 200;\n  font-size: 1.1rem;\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n\n  @media (max-width: ${'768px'}) {\n    font-size: 1rem;\n  }\n`\n\nexport default () => (\n  <ThemeProvider theme={primaryTheme}>\n    <PageContainer>\n        <ColorContainer className=\"slideUp\" />\n        <LoginContainer className=\"becomeTransparent\">\n          <Login>\n            <h1 id=\"login-page-header\" className=\"fadeInFast\">\n              <span role=\"img\" aria-label=\"cloud\">☁️</span> Day Club\n            </h1>\n            <LoginPageText className=\"fadeInSlow\">\n              Your <span className=\"greenToWhite\">Spotify Playlists</span>, with a splash of\n              <br/> \n                <span className=\"colourSpan\">\n                  <span className=\"purpleToWhite\"> c</span>\n                  <span className=\"blueToWhite\"  >o</span> \n                  <span className=\"greenToWhite\" >l</span> \n                  <span className=\"yellowToWhite\">o</span> \n                  <span className=\"orangeToWhite\">u</span> \n                  <span className=\"redToWhite\"   >r </span>  \n                </span>\n              for those cloudy days.\n            </LoginPageText>\n            <a href={LOGIN_URI} className=\"fadeInSlower\"> \n              <LoginButton>\n                Login with Spotify Premium\n              </LoginButton>\n            </a>\n            <Notices className=\"fadeInSlower\">\n            Dear music loving friend:\n            <br/>\n              <a href=\"https://developer.spotify.com/documentation/web-playback-sdk/#supported-browsers\">\n                Spotify's Web Player SDK does not support Safari or mobile devices yet. \n              </a>\n            <br />Cloudy Day Club works on Chrome, Brave, Firefox, and Edge.</Notices>\n          </Login>\n          </LoginContainer>\n      <LoginImage id=\"login-image\"/>\n\n    </PageContainer>\n  </ThemeProvider>\n);\n\n\n","import color from 'color';\n\n// Convert color in format [R, G, B] to Hex\nexport const rgbToHex = ([r, g, b]) => {\n  const converter = (c) => {\n    const hex = c.toString(16);\n    return hex.length === 1 ? \"0\" + hex : hex;\n  }\n  return \"#\" + converter(r) + converter(g) + converter(b);\n}\n\n// Calculate whether player text should be light or dark\nexport const calcTextColor = (bgColor) => color.rgb(bgColor).isDark()\n\n// Get the query params off the window's URL\nexport const getHashParams = () => {\n  const hashParams = {};\n  let e;\n  const r = /([^&;=]+)=?([^&;]*)/g;\n  const q = window.location.hash.substring(1);\n  while ((e = r.exec(q))) {\n    hashParams[e[1]] = decodeURIComponent(e[2]);\n  }\n  return hashParams;\n};\n\n// Higher-order function for async/await error handling\nexport const catchErrors = fn => {\n  return function(...args) {\n    return fn(...args).catch(err => {\n      console.error(err);\n    });\n  };\n};\n","import axios from 'axios';\nimport { getHashParams } from '../utils';\n\nconst LOGIN_URI =\n  process.env.NODE_ENV !== 'production'\n    ? 'http://localhost:3000'\n    : 'https://cloudy-day-club.herokuapp.com';\n\n// TOKENS ******************************************************************************************\nconst EXPIRATION_TIME = 3600 * 1000; // 3600 seconds * 1000 = 1 hour in milliseconds\n\nconst setTokenTimestamp = () => window.localStorage.setItem('spotify_token_timestamp', Date.now());\nconst setLocalAccessToken = token => {\n  setTokenTimestamp();\n  window.localStorage.setItem('spotify_access_token', token);\n};\nconst setLocalRefreshToken = token => window.localStorage.setItem('spotify_refresh_token', token);\nconst getTokenTimestamp = () => window.localStorage.getItem('spotify_token_timestamp');\nconst getLocalAccessToken = () => window.localStorage.getItem('spotify_access_token');\nconst getLocalRefreshToken = () => window.localStorage.getItem('spotify_refresh_token');\n\n// Refresh the token\nconst refreshAccessToken = async () => {\n  try {\n    const { data } = await axios.get(`/refresh_token?refresh_token=${getLocalRefreshToken()}`);\n    const { access_token } = data;\n    setLocalAccessToken(access_token);\n    window.location.reload();\n    return;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\n// Get access token off of query params (called on application init)\nexport const getAccessToken = () => {\n  const { error, access_token, refresh_token } = getHashParams();\n\n  if (error) {\n    console.error(\"HASH PARAMS\", error);\n    refreshAccessToken();\n  }\n\n  // If token has expired\n  if (Date.now() - getTokenTimestamp() > EXPIRATION_TIME) {\n    console.warn('Access token has expired, refreshing...');\n    refreshAccessToken();\n  }\n\n  const localAccessToken = getLocalAccessToken();\n  const localRefreshToken = getLocalRefreshToken();\n\n  // If there is no REFRESH token in local storage, set it as `refresh_token` from params\n  if (!localRefreshToken || localRefreshToken === 'undefined') {\n    setLocalRefreshToken(refresh_token);\n  }\n\n  // If there is no ACCESS token in local storage, set it and return `access_token` from params\n  if (!localAccessToken || localAccessToken === 'undefined') {\n    setLocalAccessToken(access_token);\n    return access_token;\n  }\n\n  return localAccessToken;\n};\n\nexport const token = getAccessToken();\n\nexport const logout = () => {\n  window.localStorage.removeItem('spotify_token_timestamp');\n  window.localStorage.removeItem('spotify_access_token');\n  window.localStorage.removeItem('spotify_refresh_token');\n  window.location = LOGIN_URI;\n};\n\n// API CALLS ***************************************************************************************\n\nconst headers = {\n  Authorization: `Bearer ${token}`,\n  'Content-Type': 'application/json',\n};\n\n/**\n * Get Current User's Profile\n * https://developer.spotify.com/documentation/web-api/reference/users-profile/get-current-users-profile/\n */\nexport const getUser = () => axios.get('https://api.spotify.com/v1/me', { headers });\n\n/**\n * Get a List of Current User's Playlists\n * https://developer.spotify.com/documentation/web-api/reference/playlists/get-a-list-of-current-users-playlists/\n */\nexport const getPlaylists = () => \naxios.get(\n  'https://api.spotify.com/v1/me/playlists', { \n    params: {\n    limit: 50\n  }, \n  headers \n});\n\n/**\n * Get a Playlist\n * https://developer.spotify.com/documentation/web-api/reference/playlists/get-playlist/\n */\nexport const getPlaylist = playlistId =>\n  axios.get(`https://api.spotify.com/v1/playlists/${playlistId}`, { headers });\n\n/**\n * Get a Playlist's Tracks\n * https://developer.spotify.com/documentation/web-api/reference/playlists/get-playlists-tracks/\n */\nexport const getPlaylistTracks = playlistId =>\n  axios.get(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, { headers });\n\n/**\n * Return a comma separated string of track IDs from the given array of tracks\n */\nconst getTrackIds = tracks => tracks.map(({ track }) => track.id).join(',');\n\n/**\n * Get Audio Features for Several Tracks\n * https://developer.spotify.com/documentation/web-api/reference/tracks/get-several-audio-features/\n */\nexport const getAudioFeaturesForTracks = tracks => {\n  const ids = getTrackIds(tracks);\n  return axios.get(`https://api.spotify.com/v1/audio-features?ids=${ids}`, { headers });\n};\n\n/**\n * Get a Track\n * https://developer.spotify.com/documentation/web-api/reference/tracks/get-track/\n */\nexport const getTrack = trackId =>\n  axios.get(`https://api.spotify.com/v1/tracks/${trackId}`, { headers });\n\n/**\n * Get Audio Analysis for a Track\n * https://developer.spotify.com/documentation/web-api/reference/tracks/get-audio-analysis/\n */\nexport const getTrackAudioAnalysis = trackId =>\n  axios.get(`https://api.spotify.com/v1/audio-analysis/${trackId}`, { headers });\n\n/**\n * Get Audio Features for a Track\n * https://developer.spotify.com/documentation/web-api/reference/tracks/get-audio-features/\n */\nexport const getTrackAudioFeatures = trackId =>\n  axios.get(`https://api.spotify.com/v1/audio-features/${trackId}`, { headers });\n\nexport const getUserInfo = () => {\n  return axios\n    .all([getUser(), getPlaylists()])\n    .then(\n      axios.spread((user, followedArtists, playlists, topArtists, topTracks) => {\n        return {\n          user: user.data,\n          followedArtists: followedArtists.data,\n          playlists: playlists.data,\n          topArtists: topArtists.data,\n          topTracks: topTracks.data,\n        };\n      }),\n    );\n};\n\nexport const getTrackInfo = trackId => {\n  return axios\n    .all([getTrack(trackId), getTrackAudioAnalysis(trackId), getTrackAudioFeatures(trackId)])\n    .then(\n      axios.spread((track, audioAnalysis, audioFeatures) => {\n        return {\n          track: track.data,\n          audioAnalysis: audioAnalysis.data,\n          audioFeatures: audioFeatures.data,\n        };\n      }),\n    );\n};\n\n// WEB SDK PLAYER API ******************************************************************************\n\n/**\n * Play a Track (from the start)\n * https://developer.spotify.com/documentation/web-playback-sdk/reference/\n */\nexport const playTrack = (trackUri, deviceId) => {\n  const url = `https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`;\n  const body = { uris: [`spotify:track:${trackUri}`] };\n  return axios.put(url, body, {headers});\n}\n\n/**\n * Pause a Track\n * https://developer.spotify.com/documentation/web-api/reference/player/pause-a-users-playback/\n */\n\nexport const pauseTrack = (deviceId) => {\n  const url = `https://api.spotify.com/v1/me/player/pause`;\n  const body = { device_id: deviceId };\n  return axios.put(url, body, {headers});\n}\n\n/**\n* Resume Playback\n* https://developer.spotify.com/documentation/web-api/reference/player/start-a-users-playback/\n*/\nexport const resumeTrack = (deviceId) => {\n const url = `https://api.spotify.com/v1/me/player/play`;\n const body = { device_id: deviceId };\n return axios.put(url, body, {headers});\n}","import React from 'react';\nimport { Link } from '@reach/router';\nimport styled from 'styled-components/macro';\n\nconst PlaylistItem = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  vertical-align: top;\n  display: inline-block;\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n  font-weight: 600;\n`\n\nconst PlaylistCoverContainer = styled.div`\n  width: 100%;\n  display: inline-block;\n`\n\nconst PlaylistCover = styled.div` \n  width: 100%;\n  height: 0;\n  padding-bottom: 100%;   \n`\n\nexport default ({image, link, name}) => (\n  <PlaylistItem>\n    <Link to={link}>\n      <PlaylistCoverContainer>\n        <PlaylistCover className=\"playlist-cover\" \n          style={{background: `url(${image ? image : \"\"})`}}\n          alt={name}\n        />\n      </PlaylistCoverContainer>\n    </Link>\n    <Link to={link} className=\"playlist-link\">{name}</Link>\n  </PlaylistItem>\n)","import React  from 'react';\nimport styled from 'styled-components/macro';\n\nconst Loader = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  flex-grow: 1;\n  place-content: center;\n`\n\nconst Spinner = styled.div`\n`\n\nexport default () => (\n <Loader>\n  <Spinner className=\"loader loader-1\">\n    <div className=\"loader-outer\" />\n    <div className=\"loader-inner\" />\n  </Spinner>\n </Loader>\n);\n\n\n","import React from 'react';\nimport { getPlaylists } from '../spotify';\nimport { catchErrors } from '../utils'\nimport styled from 'styled-components/macro';\nimport PlaylistContainer from './PlaylistContainer'\nimport { cachePlaylists } from '../actions/cachePlaylists';\nimport defaultPlaylistCover from '../icons/default-playlist-cover.svg'\nimport Loader from '../components/Loader'\nimport { connect } from 'react-redux'\n\nconst PlaylistsGridContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  min-height: 75vh;\n  margin: 2rem auto;\n  margin-bottom: 5rem;\n  flex-wrap: wrap;\n`\n\nconst PlaylistsHeader= styled.h2`\n  flex-basis: 100%;\n  color: white;\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n  font-size: 2rem;\n`\n\nconst PlaylistsGrid= styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-column-gap: 1.2rem;\n  grid-row-gap: 1.2rem;\n`\n\nclass Playlists extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      networkRequestMade: false\n    }\n  }\n\n  componentDidMount() {\n    catchErrors(this.getData());\n    if (Object.keys(this.props.cache.playlists).length === 0){\n      console.log('Network Request')\n      catchErrors(this.getData());\n    } \n  }\n\n  async getData() {\n    const { data } = await getPlaylists();\n    this.setState({ playlists: data, networkRequestMade: true });\n    this.props.cachePlaylists({ playlists: data })\n  }\n\n  render() {\n    var { playlists } = this.state;\n\n    if ( \n      Object.keys(this.props.cache.playlists).length !== 0 \n      && !this.state.networkRequestMade\n    ) { \n      playlists = this.props.cache.playlists; // Use Cache After 1st Load\n    }\n    \n    return (\n      <PlaylistsGridContainer>\n        <PlaylistsHeader>Playlists</PlaylistsHeader>\n          {playlists ?\n            <PlaylistsGrid id=\"playlist-grid\">\n            {playlists.items.map((playlist) => (\n              <PlaylistContainer\n                key={playlist.id}\n                link={`playlist/${playlist.id}`}\n                name={playlist.name}\n                image={\n                  playlist.images.length !== 0 \n                  ? playlist.images[0].url \n                  : defaultPlaylistCover}\n              />\n            ))}\n            </PlaylistsGrid>\n          : <Loader />}\n      </PlaylistsGridContainer>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { cache } = state\n  return { cache }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  cachePlaylists: (playlists) => dispatch(cachePlaylists(playlists))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Playlists)","export const cachePlaylists = ({playlists}) => ({\n  type: 'CACHE_PLAYLISTS',\n  playlists\n})","import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst PlaylistHeaderContainer = styled.div`\n  margin: 2rem auto;\n  width: 90%;\n  display: flex;\n  img {\n    display: flex;\n    width: 12.5vw;\n    height: 12.5vw;\n    object-fit: cover;\n  }\n`\n\nconst PlaylistInfo = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-basis: 70%;\n  flex-grow: 1;\n  margin-left: 1rem;\n  width: 90%;\n  color: white;\n`\n\nconst PlaylistTitle = styled.h1` \n  font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n  margin: 0 0;\n  margin-bottom: 2rem;\n  font-size: 2.5rem;\n  width: 90%;\n  align-self: flex-start;\n`\n\nconst SubHeader = styled.div`\n  align-self: flex-end;\n`\n\nconst PlaylistCreator = styled.h3`\n  width: 100%;\n  display: block;  \n  color: white;\n  font-weight: 500;\n  font-size: 1rem;\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n  margin: 0;\n  margin-bottom: 0.3rem;\n  a {\n    color: white;\n  }\n`\n\nconst OpenWithSpotify = styled.a`\n  margin: 0;\n  color: white;\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n`\n\nexport const PlaylistHeader = ({name, image, ownerUrl, ownerName, spotifyUrl}) => (\n  <PlaylistHeaderContainer>\n    <img alt={`Playlist cover for ${name}`} src={image} />\n    <PlaylistInfo>\n\n      <PlaylistTitle>{name}</PlaylistTitle>\n\n      <SubHeader>\n        <PlaylistCreator>{`By: `}   \n        <a href={ownerUrl}>\n          {ownerName}\n        </a></PlaylistCreator>\n        <OpenWithSpotify href={spotifyUrl}>\n          Open this playlist with Spotify\n        </OpenWithSpotify>\n      </SubHeader>\n      \n    </PlaylistInfo>\n  </PlaylistHeaderContainer>\n)","import React from 'react';\nimport playIcon from '../../icons/play-icon-circular.svg'\nimport soundIcon from '../../icons/sound-icon-circular.svg'\nimport styled from 'styled-components/macro';\n\nconst PlayButtonStyle = styled.img`\n  opacity: ${props => props.nowPlaying ? '0.3' : '1'};\n`\n\nexport const PlayButton = ({nowPlaying, albumArt, uri, trackName, playOnKeyDown, playOnClick}) => (\n  <PlayButtonStyle\n    alt=\"play-icon\"\n    nowPlaying={nowPlaying}\n    src={nowPlaying ? soundIcon : playIcon} \n    tabIndex={0}\n    onKeyDown={(event) => {\n      if(event.key === 'Enter'){\n        playOnKeyDown(albumArt, uri, trackName)\n      }\n    }}\n    onClick={() => playOnClick(albumArt, uri, trackName)}\n  />\n)","import React, {Component} from 'react';\nimport { getPlaylist, getAudioFeaturesForTracks } from '../spotify';\nimport { catchErrors } from '../utils'\nimport { connect } from 'react-redux'\nimport { playTrack } from '../actions/playerControls'\nimport { PlaylistHeader } from './Playlist/PlaylistHeader'\nimport { PlayButton } from './Playlist/PlayButton'\nimport playIcon from '../icons/play-icon-circular.svg'\nimport defaultPlaylistCover from '../icons/default-playlist-cover.svg'\nimport Loader from '../components/Loader'\nimport styled from 'styled-components/macro';\nimport merge from 'lodash.merge'\n\n\nconst PlaylistItems = styled.table`\n  color: white;\n  display: grid;\n  border-collapse: collapse;\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n  font-size: 0.8rem;\n  min-width: 100%;\n  grid-template-columns: \n    minmax(75px, 1fr)\n    minmax(150px, 2fr)\n    minmax(150px, 2fr)\n    minmax(150px, 1fr);\n\n  thead, tbody, tr {\n    display: contents;\n  }\n\n  th, td {\n    padding: 0.7rem;\n    padding-left: 0.3rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  th {\n    top: 0;\n    text-align: left;\n    font-weight: normal;\n    font-size: 0.8rem;\n    font-weight: 600;\n    color: white;\n  }\n\n  th:last-child {\n    border: 0;\n  }\n\n  td {\n    display: flex;\n    border-top: 1px solid #3A3A3A;\n    align-items: center;\n  }\n\n  td:first-child {\n    img {\n      width: 20%;\n      filter: brightness(0) invert(1);\n      margin: 0 auto;\n      padding: 0;\n      cursor: pointer;\n      &:hover {\n        opacity: 0.75;\n      }\n    }\n  }\n\n  td {\n    padding: 0.5rem 0.3rem;\n    color: #CACACA;\n  }\n`\n\nconst TableText = styled.div`\n  display: block;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  width: 90%;\n`\n\nclass Playlist extends Component {\n  constructor(props){\n    super(props)\n    this.handlePlay = this.handlePlay.bind(this)\n    this.state = {\n      playlist: null,\n      tracks: null,\n      audioFeatures: null,\n      combined: {},\n      paused: false,\n    };\n  }\n\n  componentDidMount() {\n    catchErrors(this.getData());\n  }\n\n  async getData() {\n    const { playlistId } = this.props;\n    const { data } = await getPlaylist(playlistId);\n    this.setState({ playlist: data });\n\n    if (data) {\n      const { playlist } = this.state;\n      const { data } = await getAudioFeaturesForTracks(playlist.tracks.items);\n\n      const audioFeatures = data.audio_features.reduce((obj, item) => (\n        obj[item.id] = {\n          acousticness: item.acousticness,\n          danceability: item.danceability,\n          energy: item.energy,\n          instrumentalness: item.instrumentalness,\n          speechiness: item.speechiness,\n          temp: item.tempo,\n          valence: item.valence\n        // eslint-disable-next-line no-sequences\n        }, obj) ,{}\n      );\n\n      const tracks = playlist.tracks.items.map(({track})=>track).reduce((obj, item) => (\n        obj[item.id] = {\n          trackArtist: item.artists[0].name,\n          trackLength: item.duration_ms,\n          trackName: item.name,\n          albumArt: item.album.images[0].url,\n          albumName: item.album.name\n        // eslint-disable-next-line no-sequences\n        }, obj) ,{}\n      );\n\n      console.log(tracks, audioFeatures)\n\n      const combined = merge(tracks, audioFeatures)\n\n      this.setState({ \n        audioFeatures: data,  \n        combined\n      });\n\n    }\n  }\n\n  formatTime = ms => {\n    const secs = (ms / 1000) // to seconds\n    const minutes = parseInt(secs / 60) // to minutes\n    let secsLeft = parseInt(secs - (minutes*60))\n    secsLeft = ('0' + secsLeft).slice(-2)\n    const result = `${minutes}:${secsLeft}`\n    return result\n  }\n\n  handlePlay(albumArt, uri, name){\n    // If the track is NOT already playing\n    // or if a new track is selected, PLAY\n    if (!this.props.playback.pauseTrack || (\n      this.props.playback.uri !== uri\n    )){\n      // Dispatch playTrack action\n      this.props.playTrack({\n        albumArt,\n        uri,\n        name\n      })\n    }\n  }\n  \n  render() {\n    const { combined, playlist } = this.state;\n\n    return (\n      <div>\n        {playlist \n          ? <PlaylistHeader \n              name={playlist.name}\n              image={\n                playlist.images.length !== 0 \n                ? playlist.images[0].url \n                : defaultPlaylistCover}\n              ownerUrl={playlist.owner.external_urls.spotify}\n              ownerName={playlist.owner.display_name}\n              spotifyUrl={playlist.external_urls.spotify}\n            />\n          : <Loader />}\n        {Object.keys(combined).length !== 0 \n          ? <div className=\"fadeinFast\">\n              <PlaylistItems>\n                <thead>\n                  <tr>\n                    <th>{/*Play Btns.*/}</th>\n                    <th>NAME</th>\n                    <th>ARTIST</th>\n                    <th>LENGTH</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.keys(combined).map((key, idx) => (\n                      <tr key={key}>\n                        <td>\n                          {this.props.playback.playerReady \n                            ? <PlayButton\n                                  nowPlaying={this.props.playback.uri === key} \n                                  albumArt={combined[key].albumArt}\n                                  uri={key}\n                                  trackName={combined[key].trackName}\n                                  playOnKeyDown={this.handlePlay.bind(this)}\n                                  playOnClick={this.handlePlay.bind(this)}\n                                />\n                            : <img alt=\"play-icon-loading\" src={playIcon} />}\n                        </td>\n                        <td><TableText>{combined[key].trackName}</TableText></td>\n                        <td><TableText>{combined[key].trackArtist}</TableText></td>\n                        <td>{this.formatTime(combined[key].trackLength)}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </PlaylistItems>\n              </div>\n            : <Loader />}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { playback, cache } = state\n  return { playback, cache }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  playTrack: (trackObject) => dispatch(playTrack(trackObject))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Playlist)","export const playTrack = ({albumArt, uri, name}) => ({\n  type: 'PLAY_TRACK',\n  albumArt,\n  uri,\n  name\n})\n\nexport const setPlayerState = ({state}) => {\n  return ({\n    type: 'SET_PLAYER_STATE',\n    state\n  })\n}\n\nexport const setPlayerReady = () => {\n  return ({\n    type: 'SET_PLAYER_READY'\n  })\n}\n\nexport const togglePlay = () => {\n  return ({\n    type: 'TOGGLE_PLAY'\n  })\n}","import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst NowPlaying = styled.h1`\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n  text-align: center;\n  flex-basis: 100%;\n  width: 100%;\n  font-size: 2.4rem;\n`\n\nexport const NowPlayingText = ({lightText, trackName}) => (\n  <NowPlaying\n    style={{ color: `${lightText ? 'white' : 'black'}` }}\n  >\n    {trackName === \"\" ? 'Welcome to Cloudy Day Club' : trackName}\n  </NowPlaying>\n)","import React from 'react';\nimport styled from 'styled-components/macro';\nimport playIcon from '../../icons/play-icon.svg'\nimport pauseIcon from '../../icons/pause-icon.svg'\n\nconst ControlsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`\n\nconst CircularContainer = styled.div`\n  z-index: 0;\n  width: 5vw;\n  height: 5vw;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  border-radius: 50%;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.75;\n  }\n`\n\nconst TogglePlay = styled.img`\n  z-index: 1;\n  width: 50%;\n`\n\nexport const Controls = ({lightText, togglePlayback, paused}) => (\n  <ControlsContainer>\n    <CircularContainer\n      style={{\n        border: `${\n          lightText \n          ? '3px solid white' \n          : '3px solid black'}`\n      }}\n      onClick={() => togglePlayback()}\n      onKeyDown={(event) => {\n        if(event.key === 'Enter'){\n          togglePlayback()        \n        }\n      }}\n    >\n      <TogglePlay \n        tabIndex={0}\n        src={paused \n          ? playIcon \n          : pauseIcon \n        }\n        style={{\n          filter: `${\n            lightText \n            ? 'brightness(0) invert(1)' \n            : 'brightness(0)'}`\n        }}\n      />\n    </CircularContainer>\n  </ControlsContainer>\n)","import React from 'react';\nimport styled from 'styled-components/macro';\nimport CloudyDayClubLogo from '../../icons/logo.svg'\nimport { NowPlayingText } from './NowPlayingText';\nimport { Controls } from './Controls';\n\nconst AlbumArt = styled.img`\n  width: 20vw;\n  height: 20vw;\n  border: none;\n`\n\nconst PlayerSection = styled.div`\n  height: 50%;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`\n\nexport const StandardPlayer = ({albumArt, lightText, trackName, uri, paused, playerReady, togglePlayback}) => (\n  <PlayerSection className=\"fadeInFast\">\n    <AlbumArt id=\"album-art\" \n      src={\n        albumArt \n        ? albumArt\n        : CloudyDayClubLogo} \n    />\n    <NowPlayingText \n      lightText={lightText} \n      trackName={trackName}\n    />\n    {playerReady && uri !== \"\" \n      ? <Controls \n          lightText={lightText} \n          togglePlayback={togglePlayback}\n          paused={paused}\n        />\n      : <div />}\n  </PlayerSection>\n)","import React, { Component } from 'react';\nimport Script from 'react-load-script';\nimport { connect } from 'react-redux'\nimport { setPlayerReady, togglePlay } from '../../actions/playerControls'\nimport { getAccessToken, playTrack, resumeTrack } from '../../spotify'\nimport { StandardPlayer } from './StandardPlayer'\n\nclass Player extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLoadSuccess = this.handleLoadSuccess.bind(this);\n    this.handleLoadFailure = this.handleLoadSuccess.bind(this);\n    this.togglePlayback = this.togglePlayback.bind(this)\n    this.cb = this.cb.bind(this);\n    this.nodeRef = React.createRef(null);\n    this.state = {\n      playerReady: false,\n      trackName: \"\",\n      currentPosition: 0\n    }\n  }\n\n  componentDidMount() {\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      this.handleLoadSuccess();\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if (this.props.playback.uri !== \"\" && prevProps.playback.uri !== this.props.playback.uri){\n      this.executePlaySong(this.props.playback.uri);\n    }\n  }\n\n  async handleLoadSuccess() {\n    this.setState({ scriptLoaded: true });\n    const token = await getAccessToken();\n    this.player = new window.Spotify.Player({\n      name: 'Web Playback SDK Quick Start Player',\n      getOAuthToken: cb => { cb(token); }\n    });\n    \n    // Error handling\n    this.player.addListener('initialization_error', ({ message }) => { console.error(message); });\n    this.player.addListener('authentication_error', ({ message }) => { console.error(message); });\n    this.player.addListener('account_error', ({ message }) => { console.error(message); });\n    this.player.addListener('playback_error', ({ message }) => { console.error(message); });\n\n    // Playback status updates\n    this.player.addListener('player_state_changed', state => {\n      if (state){\n        this.setState({ paused: state.paused })\n      } \n    });\n\n    // Ready\n    this.player.addListener('ready', ({ device_id }) => {\n      this.setState({ playerReady: true });\n      this.deviceId = device_id\n      console.log('Ready with Device ID', device_id);\n      this.props.setPlayerReady()\n    });\n\n    // Not Ready\n    this.player.addListener('not_ready', ({ device_id }) => {\n      console.log('Device ID has gone offline', device_id);\n    });\n\n    // Connect to the player!\n    this.player.connect();\n  }\n\n  cb(token) {\n    return(token);\n  }\n\n  handleScriptCreate() {\n    this.setState({ scriptLoaded: false });\n    console.log(\"Script created\");\n  }\n\n  handleScriptError() {\n    this.setState({ scriptError: true });\n    console.log(\"Script error\");\n  }\n\n  handleScriptLoad() {\n    this.setState({ scriptLoaded: true});\n    console.log(\"Script loaded\");\n  }\n\n  executePlaySong(uri){\n    if (this.deviceId){\n      playTrack(uri, this.deviceId)\n    }\n  }\n\n  togglePlayback(){\n    this.player.togglePlay()\n    this.props.togglePlay()\n  }\n\n  executeResumeSong(){\n    resumeTrack(this.deviceId)\n  }\n\n  render() {\n    return (\n      <div>\n          <StandardPlayer  \n              albumArt={this.props.playback.albumArt}\n              lightText={this.props.lightText} \n              trackName={this.props.playback.trackName}\n              playerReady={this.state.playerReady}\n              uri={this.props.playback.uri}\n              paused={this.state.paused}\n              togglePlayback={this.togglePlayback.bind(this)}\n          />\n        <header>\n          <Script\n            url=\"https://sdk.scdn.co/spotify-player.js\"\n            onCreate={this.handleScriptCreate.bind(this)}\n            onError={this.handleScriptError.bind(this)}\n            onLoad={this.handleScriptLoad.bind(this)}\n          />\n        </header>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setPlayerReady: () => dispatch(setPlayerReady()),\n  togglePlay: () => dispatch(togglePlay())\n})\n\nconst mapStateToProps = (state) => {\n  const { playback } = state\n  return { playback }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player)","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { getAlbumPrimaryColor } from '../colors'\nimport styled from 'styled-components/macro';\nimport { catchErrors } from '../utils'\nimport { rgbToHex, calcTextColor } from '../utils';\nimport Player from './Player/Player'\n\nconst defaultColor = \"#5F2233\"\n\nconst PlayerPageContainer = styled.div`\n  height: 100%;\n  flex-grow: 1;\n  flex-basis: 40%;\n  display: grid;\n  place-content: center;\n  -webkit-transition: background-color 1.3s ease-in-out;\n  -ms-transition: background-color 1.3s ease-in-out;\n  transition: background-color 1.3s ease-in-out;\n`\nclass PlayerContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.nodeRef = React.createRef(null);\n    this.state = {\n      color: defaultColor,\n      lightText: true\n    }\n  }\n\n  // Applies new Color if Album Changes\n  async getAlbumColor(albumArtUrl) {\n    var resp = await getAlbumPrimaryColor(albumArtUrl);\n    const color = rgbToHex(resp.data);\n    const lightText = calcTextColor(resp.data);\n    const trackName = this.props.playback.trackName;\n    this.setState({color, lightText, trackName})\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if (prevProps.playback.uri !== this.props.playback.uri) {\n      const albumArtUrl = this.props.playback.albumArt;\n      if (albumArtUrl !== prevProps.playback.albumArt){\n        catchErrors(this.getAlbumColor(albumArtUrl));\n      } else {\n        // Same Album (No Update Necessary)\n      }\n    } else if (prevProps.playback.uri === this.props.playback.uri \n      && (this.state.color === defaultColor)){\n      // Starting Up Player\n    } else {\n      // New Song is Playing\n    }\n  }\n\n  render() {\n    return (\n      <PlayerPageContainer \n        ref={this.nodeRef}\n        style={{\n          backgroundColor: `${this.state.color}`\n        }}\n      >\n        <Player lightText={this.state.lightText}/>      \n      </PlayerPageContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { playback } = state\n  return { playback }\n}\n\nexport default connect(mapStateToProps, undefined)(PlayerContainer)","import axios from 'axios';\n\nconst backendURL =\n  process.env.NODE_ENV !== 'production'\n    ? 'http://localhost:8888/colors'\n    : 'https://cloudy-day-club.herokuapp.com/colors';\n\nexport const getAlbumPrimaryColor = (url) => axios.post(backendURL, {url})","import React from 'react';\nimport styled from 'styled-components/macro';\nimport { Link } from '@reach/router';\nimport { logout } from '../spotify'\nimport playlistsIcon from '../icons/list-icon.svg'\nimport logoutIcon from '../icons/logout-icon.svg'\n\nconst NavigationContainer = styled.div`\n  display: grid;\n  height: 95%;\n  width: 80%;\n  margin: auto;\n`\n\nconst NavIcon = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  filter: brightness(0) invert(1);\n  opacity: 0.8;\n  transition: opacity 0.1s;\n  &:hover {\n    opacity: 0.4;\n  }\n  .nav-icon {\n    width: 50%;\n    margin: 0 auto;\n  }\n  p { \n    font-size: 0.75rem; \n    margin: 0 auto; \n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n    padding-bottom: 1rem;\n    font-weight: 100;\n  }\n`\n\nconst LogoutIcon = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-self: flex-end;\n  filter: brightness(0) invert(1);\n  opacity: 0.8;\n  transition: opacity 0.1s;\n  &:hover {\n    opacity: 0.4;\n  }\n  .nav-icon {\n    width: 50%;\n    margin: 0 auto;\n  }\n  p { \n    font-size: 0.75rem; \n    margin: 0 auto; \n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n    font-weight: 100;\n  }\n`\n\nconst Navigation = styled.nav`\n  color: white;\n  display: flex;\n  flex-wrap: wrap;\n  height: 90%;\n  align-self: end;\n`\n\nconst Navbar = () => (\n  <NavigationContainer>\n    <Navigation className=\"fadeInFast\">\n      <NavIcon>\n        <Link to='/' className=\"nav-icon\">\n          <img src={playlistsIcon} alt=\"playlists\" />\n        </Link>\n        <p>Playlists</p>\n      </NavIcon>\n      <LogoutIcon>\n        <Link to='/' onClick={logout} className=\"nav-icon\">\n          <img src={logoutIcon} alt=\"logout\" \n          style={{\n            transform: `rotate(180deg)`, \n          }}/>\n        </Link>\n        <p>Logout</p>\n      </LogoutIcon>\n    </Navigation>\n  </NavigationContainer>\n);\n\nexport default Navbar","import React from 'react';\nimport Playlists from './Playlists'\nimport Playlist from './Playlist'\nimport PlayerContainer from './PlayerContainer'\nimport Navbar from './Navbar'\nimport { Router } from '@reach/router';\nimport styled, {ThemeProvider} from 'styled-components/macro';\nimport { primaryTheme } from '../styles/themes';\n\nconst DashboardContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n`\n\nconst NavbarContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  overflow-x: hidden;\n  background: darkred;\n  height: 100%;\n  width: 4rem;\n  min-width: 4rem;\n  position: fixed;\n  background: ${props => props.theme.spotifydarkgray};\n`\n/* Margin Left Must = Navbar Container's Width */\nconst InterfaceContainer = styled.div`\n  overflow-y: scroll;\n  margin-left: 4rem;\n  background: #2b2a2a;\n  flex-basis: 55%;\n`\n\nconst Dashboard = () => (\n  <ThemeProvider theme={primaryTheme}>\n    <DashboardContainer>\n      <NavbarContainer>\n        <Navbar />\n      </NavbarContainer>\n      <InterfaceContainer>\n        <Router>\n          <Playlists path=\"/\" />\n          <Playlist path=\"/playlist/:playlistId\" />\n        </Router>\n      </InterfaceContainer>\n      <PlayerContainer />\n    </DashboardContainer>\n  </ThemeProvider>\n);\n\nexport default Dashboard;","const playbackReducerDefaultState = {\n  playerReady: false,\n  pauseTrack: false,\n  uri: \"\",\n  albumArt: \"\",\n  defaultColor: \"#5F2233\",\n  albumColors: [],\n  trackName: \"\"\n}\n\nexport default (state = playbackReducerDefaultState, action) => {\n  switch (action.type) {\n    case 'TOGGLE_PLAY':\n      return state = {\n        ...state,\n        pauseTrack: !state.pauseTrack\n      }\n    case 'SET_PLAYER_READY':\n      return state = {\n        ...state,\n        playerReady: true\n      }\n    case 'PLAY_TRACK':\n      return state = {\n        ...state,\n        pauseTrack: false,\n        uri: action.uri,\n        albumArt: action.albumArt,\n        trackName: action.name\n      }\n    default:\n      return state;\n  }\n}","const cacheReducerDefaultState = {\n  playlists: {}\n}\n\nexport default (state = cacheReducerDefaultState, action) => {\n  switch (action.type) {\n    case 'CACHE_PLAYLISTS':\n      return state = {\n        playlists: action.playlists\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\n\nimport PlaybackReducer from './playback'\nimport CacheReducer from './cache'\n\nexport default combineReducers({\n  playback: PlaybackReducer,\n  cache: CacheReducer\n});\n","import React from 'react';\nimport { Provider } from 'react-redux'\nimport Login from './Login';\nimport Dashboard from './Dashboard';\nimport { token } from '../spotify';\nimport configureStore from '../store/configureStore';\nimport '../styles/styles.scss'\n\nconst store = configureStore();\n\nclass App extends React.Component {\n  state = {\n    token: ''\n  };\n\n  componentDidMount() {\n    this.setState({ token });\n  }\n\n  render() {\n    const { token } = this.state;\n    \n    return (\n      <div>\n        {token ? (\n          <Provider store={store}>\n            <Dashboard />\n          </Provider>\n          ) : <Login />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { createStore } from 'redux'\nimport rootReducer from '../reducers/rootReducer'\n\nexport default () => {\n  // STORE CREATION\n  const store = createStore(rootReducer) \n  return store\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}