{"version":3,"sources":["icons/play-icon-circular.svg","fonts/proxima_nova/proxima_nova_bold.woff","fonts/proxima_nova/proxima_nova_bold.woff2","fonts/proxima_nova/proxima_nova_semibold.woff","fonts/proxima_nova/proxima_nova_semibold.woff2","icons/spotify-logo.svg","icons/play-icon.svg","icons/pause-icon.svg","icons/list-icon.svg","styles/themes.js","fonts/index.js","components/Login.js","utils/index.js","spotify/index.js","components/PlaylistContainer.js","components/Playlists.js","actions/cachePlaylists.js","components/Playlist.js","actions/playerControls.js","colors/index.js","components/Player.js","components/PlayerContainer.js","components/Navbar.js","components/Dashboard.js","components/Profile.js","reducers/playback.js","reducers/cache.js","components/App.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["module","exports","primaryTheme","spotifygreen","spotifydarkgray","spotifydarkgray2","login","background","white","fontFamily","playlists","createGlobalStyle","ProximaNovaBoldWoff2","ProximaNovaBoldWoff","ProximaNovaSemiBoldWoff2","ProximaNovaSemiBoldWoff","PageContainer","styled","div","LoginContainer","props","theme","Login","LoginButton","button","darken","LoginPageText","h2","className","id","role","aria-label","href","rgbToHex","r","g","b","converter","c","hex","toString","length","catchErrors","fn","catch","err","console","error","setLocalAccessToken","token","window","localStorage","setItem","Date","now","getLocalRefreshToken","getItem","refreshAccessToken","a","axios","get","data","access_token","location","reload","getAccessToken","e","hashParams","q","hash","substring","exec","decodeURIComponent","getHashParams","refresh_token","warn","localAccessToken","localRefreshToken","headers","Authorization","getPlaylists","params","limit","getPlaylist","playlistId","getTrackIds","tracks","map","track","join","getAudioFeaturesForTracks","ids","PlaylistItem","PlaylistCover","image","link","name","to","src","alt","PlaylistsGridContainer","PlaylistsHeader","PlaylistsGrid","Playlists","state","networkRequestMade","this","getData","Object","keys","cache","log","setState","cachePlaylists","items","playlist","PlaylistContainer","key","images","url","React","Component","connect","dispatch","type","PlaylistHeaderContainer","PlaylistInfo","PlaylistHeader","h1","SubHeader","PlaylistCreator","h3","OpenWithSpotify","PlaylistItems","table","TableText","Playlist","formatTime","ms","secs","minutes","parseInt","secsLeft","slice","audioFeatures","combined","audio_features","reduce","obj","item","acousticness","danceability","energy","instrumentalness","speechiness","temp","tempo","valence","trackArtist","artists","trackLength","duration_ms","trackName","albumArt","album","albumName","_","merge","uri","playback","pauseTrack","playTrack","owner","external_urls","spotify","idx","playerReady","playIcon","tabIndex","onKeyDown","event","handlePlay","onClick","trackObject","backendURL","process","REDIRECT_URI","AlbumArt","img","PlayerSection","NowPlaying","ControlsContainer","CircularContainer","TogglePlay","Player","handleLoadSuccess","bind","handleLoadFailure","cb","nodeRef","createRef","currentPosition","onSpotifyWebPlaybackSDKReady","prevProps","prevState","executePlaySong","scriptLoaded","player","Spotify","getOAuthToken","addListener","message","paused","device_id","deviceId","setPlayerReady","scriptError","trackUri","body","uris","put","togglePlay","resumeTrack","spotifyLogo","style","color","lightText","border","togglePlayback","pauseIcon","filter","onCreate","handleScriptCreate","onError","handleScriptError","onLoad","handleScriptLoad","PlayerPageContainer","PlayerContainer","albumArtUrl","post","resp","bgColor","rgb","isDark","getAlbumColor","CSSTransition","in","timeout","ref","undefined","NavigationContainer","NavIcon","Navigation","nav","Navbar","playlistsIcon","DashboardContainer","NavbarContainer","InterfaceContainer","Dashboard","path","Profile","playbackReducerDefaultState","action","cacheReducerDefaultState","store","createStore","combineReducers","PlaybackReducer","CacheReducer","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8fdf10ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play-icon-circular.4cb92510.svg\";","module.exports = __webpack_public_path__ + \"static/media/proxima_nova_bold.0749b30b.woff\";","module.exports = __webpack_public_path__ + \"static/media/proxima_nova_bold.53af5fac.woff2\";","module.exports = __webpack_public_path__ + \"static/media/proxima_nova_semibold.b10c6535.woff\";","module.exports = __webpack_public_path__ + \"static/media/proxima_nova_semibold.d20d754a.woff2\";","module.exports = __webpack_public_path__ + \"static/media/spotify-logo.9b57d5aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/play-icon.718f9d87.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause-icon.93c1a16b.svg\";","module.exports = __webpack_public_path__ + \"static/media/list-icon.64135525.svg\";","export const primaryTheme = {\n  spotifygreen: '#1BB954',\n  spotifydarkgray: '#111',\n  spotifydarkgray2: '#1B1B1B',\n  login: {\n    background: '#1B1B1B',\n    white: 'white',\n    fontFamily: 'ProximaNova-Bold'\n },\n playlists: {\n   fontFamily: 'ProximaNova-SemiBold'\n }\n}\n\nexport const darkTheme = {\n  primary: 'gray',\n}\n\n","import { createGlobalStyle } from 'styled-components';\n\nimport ProximaNovaBoldWoff from './proxima_nova/proxima_nova_bold.woff';\nimport ProximaNovaBoldWoff2 from './proxima_nova/proxima_nova_bold.woff2';\nimport ProximaNovaSemiBoldWoff from './proxima_nova/proxima_nova_semibold.woff';\nimport ProximaNovaSemiBoldWoff2 from './proxima_nova/proxima_nova_semibold.woff2';\n\nexport default createGlobalStyle`\n  @font-face {\n      font-family: 'ProximaNova-Bold';\n      src: local('ProximaNova-Bold'), local('ProximaNova-Bold'),\n      url(${ProximaNovaBoldWoff2}) format('woff2'),\n      url(${ProximaNovaBoldWoff}) format('woff');\n      font-weight: 700;\n      font-style: bold;\n  }\n  @font-face {\n    font-family: 'ProximaNova-SemiBold';\n    src: local('ProximaNova-SemiBold'), local('ProximaNova-SemiBold'),\n    url(${ProximaNovaSemiBoldWoff2}) format('woff2'),\n    url(${ProximaNovaSemiBoldWoff}) format('woff');\n    font-weight: 600;\n    font-style: bold;\n  }\n`;","import React from 'react';\nimport styled, {ThemeProvider} from 'styled-components/macro';\nimport { primaryTheme } from '../styles/themes';\nimport GlobalFonts from '../fonts';\nimport { darken } from 'polished'\n\nconst LOGIN_URI =\n  process.env.NODE_ENV !== 'production'\n    ? 'http://localhost:8888/login'\n    : 'https://spotify-profile.herokuapp.com/login';\n\nconst PageContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  overflow-x: hidden;\n  overflow-y: hidden;\n`\n\nconst LoginContainer = styled.div`\n  height: 100%;\n  width: 50%;\n  padding: 0rem 0rem;\n  background: ${props => props.theme.login.background};\n  display: flex;\n  align-items: center;\n`\n\nconst Login = styled.div`\n  width: 100%;\n  height: 50%;\n  padding: 4rem;\n  /* border: 1px solid red; */\n  color: ${props => props.theme.login.white};\n  font-family: ${props => props.theme.login.fontFamily};\n  margin: 0;\n  h1 { margin: 0; font-size: 4.5rem; }\n  h2 { margin: 0; font-size: 1.75rem; }\n`\n\nconst LoginButton = styled.button`\n  background: ${props => props.theme.spotifygreen};\n  color: white;\n  font-family: ${props => props.theme.login.fontFamily};\n  font-size: 1rem;\n  padding: 1rem 2rem;\n  margin: 1rem 0rem;\n  border: none;\n  border-radius: 2rem;\n  cursor: pointer;\n  &:hover {\n    background: ${props => darken(.1, props.theme.spotifygreen)};\n  }\n`\n\nconst LoginPageText = styled.h2`\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  span.spotify-green {\n    color: ${props => props.theme.spotifygreen};\n  }\n`\n\nexport default () => (\n  <ThemeProvider theme={primaryTheme}>\n    <PageContainer className=\"container\">\n      <LoginContainer>\n        <Login>\n          <GlobalFonts />\n          <h1 id=\"login-page-header\">\n            <span role=\"img\" aria-label=\"cloud\">☁️</span> Day Club\n          </h1>\n          <LoginPageText>\n            Your <span className=\"spotify-green\">Spotify Playlists</span>, with a splash of \n              <span className=\"colour\" id=\"char-purple\"> c</span>\n              <span className=\"colour\" id=\"char-blue\">o</span> \n              <span className=\"colour\" id=\"char-green\">l</span> \n              <span className=\"colour\" id=\"char-yellow\">o</span> \n              <span className=\"colour\" id=\"char-orange\">u</span> \n              <span className=\"colour\" id=\"char-red\">r </span>  \n            for those cloudy days.\n          </LoginPageText>\n          <a href={LOGIN_URI}> \n            <LoginButton>\n              Login with Spotify\n            </LoginButton>\n          </a>\n        </Login>\n      </LoginContainer>\n    </PageContainer>\n  </ThemeProvider>\n);\n\n","import color from 'color';\n\n// Convert color in format [R, G, B] to Hex\nexport const rgbToHex = ([r, g, b]) => {\n  const converter = (c) => {\n    const hex = c.toString(16);\n    return hex.length === 1 ? \"0\" + hex : hex;\n  }\n  return \"#\" + converter(r) + converter(g) + converter(b);\n}\n\nexport const calcTextColor = (bgColor) => color.rgb(bgColor).isDark()\n\n\n\n// Get the query params off the window's URL\nexport const getHashParams = () => {\n  const hashParams = {};\n  let e;\n  const r = /([^&;=]+)=?([^&;]*)/g;\n  const q = window.location.hash.substring(1);\n  while ((e = r.exec(q))) {\n    hashParams[e[1]] = decodeURIComponent(e[2]);\n  }\n  return hashParams;\n};\n\n// Format milliseconds into MM:SS\nexport const formatDuration = millis => {\n  const minutes = Math.floor(millis / 60000);\n  const seconds = ((millis % 60000) / 1000).toFixed(0);\n  return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n};\n\n// Format milliseconds into X minutes and Y seconds\nexport const formatDurationForHumans = millis => {\n  const minutes = Math.floor(millis / 60000);\n  const seconds = ((millis % 60000) / 1000).toFixed(0);\n  return `${minutes} Mins ${seconds} Secs`;\n};\n\n// Get year from YYYY-MM-DD\nexport const getYear = date => date.split('-')[0];\n\n// Transform Pitch Class Notation to string\nexport const parsePitchClass = note => {\n  let key = note;\n\n  switch (note) {\n    case 0:\n      key = 'C';\n      break;\n    case 1:\n      key = 'D♭';\n      break;\n    case 2:\n      key = 'D';\n      break;\n    case 3:\n      key = 'E♭';\n      break;\n    case 4:\n      key = 'E';\n      break;\n    case 5:\n      key = 'F';\n      break;\n    case 6:\n      key = 'G♭';\n      break;\n    case 7:\n      key = 'G';\n      break;\n    case 8:\n      key = 'A♭';\n      break;\n    case 9:\n      key = 'A';\n      break;\n    case 10:\n      key = 'B♭';\n      break;\n    case 11:\n      key = 'B';\n      break;\n    default:\n      return null;\n  }\n\n  return key;\n};\n\nexport const formatWithCommas = n => n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n// Higher-order function for async/await error handling\nexport const catchErrors = fn => {\n  return function(...args) {\n    return fn(...args).catch(err => {\n      console.error(err);\n    });\n  };\n};\n","import axios from 'axios';\nimport { getHashParams } from '../utils';\n\n// TOKENS ******************************************************************************************\nconst EXPIRATION_TIME = 3600 * 1000; // 3600 seconds * 1000 = 1 hour in milliseconds\n\nconst setTokenTimestamp = () => window.localStorage.setItem('spotify_token_timestamp', Date.now());\nconst setLocalAccessToken = token => {\n  setTokenTimestamp();\n  window.localStorage.setItem('spotify_access_token', token);\n};\nconst setLocalRefreshToken = token => window.localStorage.setItem('spotify_refresh_token', token);\nconst getTokenTimestamp = () => window.localStorage.getItem('spotify_token_timestamp');\nconst getLocalAccessToken = () => window.localStorage.getItem('spotify_access_token');\nconst getLocalRefreshToken = () => window.localStorage.getItem('spotify_refresh_token');\n\n// Refresh the token\nconst refreshAccessToken = async () => {\n  try {\n    const { data } = await axios.get(`/refresh_token?refresh_token=${getLocalRefreshToken()}`);\n    const { access_token } = data;\n    setLocalAccessToken(access_token);\n    window.location.reload();\n    return;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\n// Get access token off of query params (called on application init)\nexport const getAccessToken = () => {\n  const { error, access_token, refresh_token } = getHashParams();\n\n  if (error) {\n    console.error(error);\n    refreshAccessToken();\n  }\n\n  // If token has expired\n  if (Date.now() - getTokenTimestamp() > EXPIRATION_TIME) {\n    console.warn('Access token has expired, refreshing...');\n    refreshAccessToken();\n  }\n\n  const localAccessToken = getLocalAccessToken();\n  const localRefreshToken = getLocalRefreshToken();\n\n  // If there is no REFRESH token in local storage, set it as `refresh_token` from params\n  if (!localRefreshToken || localRefreshToken === 'undefined') {\n    setLocalRefreshToken(refresh_token);\n  }\n\n  // If there is no ACCESS token in local storage, set it and return `access_token` from params\n  if (!localAccessToken || localAccessToken === 'undefined') {\n    setLocalAccessToken(access_token);\n    return access_token;\n  }\n\n  return localAccessToken;\n};\n\nexport const token = getAccessToken();\n\nexport const logout = () => {\n  window.localStorage.removeItem('spotify_token_timestamp');\n  window.localStorage.removeItem('spotify_access_token');\n  window.localStorage.removeItem('spotify_refresh_token');\n  window.location.reload();\n};\n\n// API CALLS ***************************************************************************************\n\nconst headers = {\n  Authorization: `Bearer ${token}`,\n  'Content-Type': 'application/json',\n};\n\n\n/**\n * Get Current User's Profile\n * https://developer.spotify.com/documentation/web-api/reference/users-profile/get-current-users-profile/\n */\nexport const getUser = () => axios.get('https://api.spotify.com/v1/me', { headers });\n\n/**\n * Get User's Followed Artists\n * https://developer.spotify.com/documentation/web-api/reference/follow/get-followed/\n */\nexport const getFollowing = () =>\n  axios.get('https://api.spotify.com/v1/me/following?type=artist', { headers });\n\n/**\n * Get Current User's Recently Played Tracks\n * https://developer.spotify.com/documentation/web-api/reference/player/get-recently-played/\n */\nexport const getRecentlyPlayed = () =>\n  axios.get('https://api.spotify.com/v1/me/player/recently-played', { headers });\n\n/**\n * Get a List of Current User's Playlists\n * https://developer.spotify.com/documentation/web-api/reference/playlists/get-a-list-of-current-users-playlists/\n */\nexport const getPlaylists = () => \naxios.get(\n  'https://api.spotify.com/v1/me/playlists', { \n    params: {\n    limit: 50\n  }, \n  headers \n});\n\n/**\n * Get a User's Top Artists\n * https://developer.spotify.com/documentation/web-api/reference/personalization/get-users-top-artists-and-tracks/\n */\nexport const getTopArtistsShort = () =>\n  axios.get('https://api.spotify.com/v1/me/top/artists?limit=50&time_range=short_term', {\n    headers,\n  });\nexport const getTopArtistsMedium = () =>\n  axios.get('https://api.spotify.com/v1/me/top/artists?limit=50&time_range=medium_term', {\n    headers,\n  });\nexport const getTopArtistsLong = () =>\n  axios.get('https://api.spotify.com/v1/me/top/artists?limit=50&time_range=long_term', { headers });\n\n/**\n * Get a User's Top Tracks\n * https://developer.spotify.com/documentation/web-api/reference/personalization/get-users-top-artists-and-tracks/\n */\nexport const getTopTracksShort = () =>\n  axios.get('https://api.spotify.com/v1/me/top/tracks?limit=50&time_range=short_term', { headers });\nexport const getTopTracksMedium = () =>\n  axios.get('https://api.spotify.com/v1/me/top/tracks?limit=50&time_range=medium_term', {\n    headers,\n  });\nexport const getTopTracksLong = () =>\n  axios.get('https://api.spotify.com/v1/me/top/tracks?limit=50&time_range=long_term', { headers });\n\n/**\n * Get an Artist\n * https://developer.spotify.com/documentation/web-api/reference/artists/get-artist/\n */\nexport const getArtist = artistId =>\n  axios.get(`https://api.spotify.com/v1/artists/${artistId}`, { headers });\n\n/**\n * Follow an Artist\n * https://developer.spotify.com/documentation/web-api/reference/follow/follow-artists-users/\n */\nexport const followArtist = artistId => {\n  const url = `https://api.spotify.com/v1/me/following?type=artist&ids=${artistId}`;\n  return axios({ method: 'put', url, headers });\n};\n\n/**\n * Check if Current User Follows Artists\n * https://developer.spotify.com/documentation/web-api/reference/follow/follow-artists-users/\n */\nexport const doesUserFollowArtist = artistId =>\n  axios.get(`https://api.spotify.com/v1/me/following/contains?type=artist&ids=${artistId}`, {\n    headers,\n  });\n\n/**\n * Check if Users Follow a Playlist\n * https://developer.spotify.com/documentation/web-api/reference/follow/follow-artists-users/\n */\nexport const doesUserFollowPlaylist = (playlistId, userId) =>\n  axios.get(`https://api.spotify.com/v1/playlists/${playlistId}/followers/contains?ids=${userId}`, {\n    headers,\n  });\n\n/**\n * Create a Playlist\n * https://developer.spotify.com/documentation/web-api/reference/playlists/create-playlist/\n */\nexport const createPlaylist = (userId, name) => {\n  const url = `https://api.spotify.com/v1/users/${userId}/playlists`;\n  const data = JSON.stringify({ name });\n  return axios({ method: 'post', url, headers, data });\n};\n\n/**\n * Add Tracks to a Playlist\n * https://developer.spotify.com/documentation/web-api/reference/playlists/add-tracks-to-playlist/\n */\nexport const addTracksToPlaylist = (playlistId, uris) => {\n  const url = `https://api.spotify.com/v1/playlists/${playlistId}/tracks?uris=${uris}`;\n  return axios({ method: 'post', url, headers });\n};\n\n/**\n * Follow a Playlist\n * https://developer.spotify.com/documentation/web-api/reference/follow/follow-playlist/\n */\nexport const followPlaylist = playlistId => {\n  const url = `https://api.spotify.com/v1/playlists/${playlistId}/followers`;\n  return axios({ method: 'put', url, headers });\n};\n\n/**\n * Get a Playlist\n * https://developer.spotify.com/documentation/web-api/reference/playlists/get-playlist/\n */\nexport const getPlaylist = playlistId =>\n  axios.get(`https://api.spotify.com/v1/playlists/${playlistId}`, { headers });\n\n/**\n * Get a Playlist's Tracks\n * https://developer.spotify.com/documentation/web-api/reference/playlists/get-playlists-tracks/\n */\nexport const getPlaylistTracks = playlistId =>\n  axios.get(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, { headers });\n\n/**\n * Return a comma separated string of track IDs from the given array of tracks\n */\nconst getTrackIds = tracks => tracks.map(({ track }) => track.id).join(',');\n\n/**\n * Get Audio Features for Several Tracks\n * https://developer.spotify.com/documentation/web-api/reference/tracks/get-several-audio-features/\n */\nexport const getAudioFeaturesForTracks = tracks => {\n  const ids = getTrackIds(tracks);\n  return axios.get(`https://api.spotify.com/v1/audio-features?ids=${ids}`, { headers });\n};\n\n/**\n * Get Recommendations Based on Seeds\n * https://developer.spotify.com/documentation/web-api/reference/browse/get-recommendations/\n */\nexport const getRecommendationsForTracks = tracks => {\n  const shuffledTracks = tracks.sort(() => 0.5 - Math.random());\n  const seed_tracks = getTrackIds(shuffledTracks.slice(0, 5));\n  const seed_artists = '';\n  const seed_genres = '';\n\n  return axios.get(\n    `https://api.spotify.com/v1/recommendations?seed_tracks=${seed_tracks}&seed_artists=${seed_artists}&seed_genres=${seed_genres}`,\n    {\n      headers,\n    },\n  );\n};\n\n/**\n * Get a Track\n * https://developer.spotify.com/documentation/web-api/reference/tracks/get-track/\n */\nexport const getTrack = trackId =>\n  axios.get(`https://api.spotify.com/v1/tracks/${trackId}`, { headers });\n\n/**\n * Get Audio Analysis for a Track\n * https://developer.spotify.com/documentation/web-api/reference/tracks/get-audio-analysis/\n */\nexport const getTrackAudioAnalysis = trackId =>\n  axios.get(`https://api.spotify.com/v1/audio-analysis/${trackId}`, { headers });\n\n/**\n * Get Audio Features for a Track\n * https://developer.spotify.com/documentation/web-api/reference/tracks/get-audio-features/\n */\nexport const getTrackAudioFeatures = trackId =>\n  axios.get(`https://api.spotify.com/v1/audio-features/${trackId}`, { headers });\n\nexport const getUserInfo = () => {\n  return axios\n    .all([getUser(), getFollowing(), getPlaylists(), getTopArtistsLong(), getTopTracksLong()])\n    .then(\n      axios.spread((user, followedArtists, playlists, topArtists, topTracks) => {\n        return {\n          user: user.data,\n          followedArtists: followedArtists.data,\n          playlists: playlists.data,\n          topArtists: topArtists.data,\n          topTracks: topTracks.data,\n        };\n      }),\n    );\n};\n\nexport const getTrackInfo = trackId => {\n  return axios\n    .all([getTrack(trackId), getTrackAudioAnalysis(trackId), getTrackAudioFeatures(trackId)])\n    .then(\n      axios.spread((track, audioAnalysis, audioFeatures) => {\n        return {\n          track: track.data,\n          audioAnalysis: audioAnalysis.data,\n          audioFeatures: audioFeatures.data,\n        };\n      }),\n    );\n};\n\n// WEB SDK PLAYER API ******************************************************************************\n\n/**\n * Play a Track (from the start)\n * https://developer.spotify.com/documentation/web-playback-sdk/reference/\n */\nexport const playTrack = (trackUri, deviceId) => {\n  const url = `https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`;\n  const body = { uris: [`spotify:track:${trackUri}`] };\n  return axios.put(url, body, {headers});\n}\n\n/**\n * Pause a Track\n * https://developer.spotify.com/documentation/web-api/reference/player/pause-a-users-playback/\n */\n\nexport const pauseTrack = (deviceId) => {\n  const url = `https://api.spotify.com/v1/me/player/pause`;\n  const body = { device_id: deviceId };\n  return axios.put(url, body, {headers});\n}\n\n/**\n* Resume Playback\n* https://developer.spotify.com/documentation/web-api/reference/player/start-a-users-playback/\n*/\nexport const resumeTrack = (deviceId) => {\n const url = `https://api.spotify.com/v1/me/player/play`;\n const body = { device_id: deviceId };\n return axios.put(url, body, {headers});\n}","import React from 'react';\nimport { Link } from '@reach/router';\nimport styled from 'styled-components/macro';\n\nconst PlaylistItem = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  vertical-align: top;\n  display: inline-block;\n  /* Works way faster than loading in Proxima Nova?? */\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n  font-weight: 600;\n`\n\nconst PlaylistCover = styled.div`\n  width: 100%;\n  display: inline-block;\n  img {\n    &:hover{\n      opacity: 0.5;\n      transition: 0.2s;\n    }\n    width: 12.5vw;\n    height: 12.5vw;\n    object-fit: cover;\n  }\n`\n\nexport default ({image, link, name}) => (\n  <PlaylistItem>\n    <Link to={link}>\n      <PlaylistCover>\n        <img src={image} alt={name}/>\n      </PlaylistCover>\n    </Link>\n    <Link to={link} className=\"playlist-link\">{name}</Link>\n  </PlaylistItem>\n)","import React from 'react';\nimport { getPlaylists } from '../spotify';\nimport { catchErrors } from '../utils'\nimport styled from 'styled-components/macro';\nimport PlaylistContainer from './PlaylistContainer'\nimport { cachePlaylists } from '../actions/cachePlaylists';\nimport { connect } from 'react-redux'\n\nconst PlaylistsGridContainer = styled.div`\n  width: 90%;\n  margin: 0 auto;\n`\n\nconst PlaylistsHeader= styled.h2`\n  color: white;\n  font-family: 'ProximaNova-Bold';\n  font-size: 2rem;\n`\n\nconst PlaylistsGrid= styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-column-gap: 1rem;\n  grid-row-gap: 1rem;\n`\n\nclass Playlists extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      networkRequestMade: false\n    }\n  }\n\n  componentDidMount() {\n    catchErrors(this.getData());\n    if (Object.keys(this.props.cache.playlists).length === 0){\n      console.log('Network Request')\n      catchErrors(this.getData());\n    } \n  }\n\n  async getData() {\n    const { data } = await getPlaylists();\n    this.setState({ playlists: data, networkRequestMade: true });\n    this.props.cachePlaylists({ playlists: data })\n  }\n\n  render() {\n    var { playlists } = this.state;\n    if (Object.keys(this.props.cache.playlists).length !== 0 && !this.state.networkRequestMade) {\n      console.log('Using Cache')\n      playlists = this.props.cache.playlists;\n    }\n    // console.log(playlists)\n    return (\n      <PlaylistsGridContainer>\n        <PlaylistsHeader>Playlists</PlaylistsHeader>\n        <PlaylistsGrid>\n          {playlists ? \n            playlists.items.map((playlist) => (\n              <PlaylistContainer\n                key={playlist.id}\n                link={playlist.id}\n                name={playlist.name}\n                image={playlist.images[0].url}\n              />\n          )) : (\n            <div>Loader</div>\n          )}\n        </PlaylistsGrid>\n      </PlaylistsGridContainer>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  const { cache } = state\n  return { cache }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  cachePlaylists: (playlists) => dispatch(cachePlaylists(playlists)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Playlists)","export const cachePlaylists = ({playlists}) => ({\n  type: 'CACHE_PLAYLISTS',\n  playlists\n})","import React, {Component} from 'react';\nimport { getPlaylist, getAudioFeaturesForTracks } from '../spotify';\nimport { catchErrors } from '../utils'\nimport { connect } from 'react-redux'\nimport { playTrack } from '../actions/playerControls'\nimport styled from 'styled-components/macro';\nimport playIcon from '../icons/play-icon-circular.svg'\nimport { Link } from '@reach/router';\nimport _ from 'lodash'\n\nconst PlaylistHeaderContainer = styled.div`\n  margin: 2rem auto;\n  width: 90%;\n  display: flex;\n  img {\n    display: flex;\n    width: 12.5vw;\n    height: 12.5vw;\n    object-fit: cover;\n  }\n`\n\nconst PlaylistInfo = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-basis: 70%;\n  flex-grow: 1;\n  margin-left: 1rem;\n  width: 90%;\n  color: white;\n`\n\nconst PlaylistHeader = styled.h1` \n  font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n  margin: 0 0;\n  margin-bottom: 2rem;\n  font-size: 2.5rem;\n  width: 90%;\n  align-self: flex-start;\n`\n\nconst SubHeader = styled.div`\n  align-self: flex-end;\n`\n\nconst PlaylistCreator = styled.h3`\n  width: 100%;\n  display: block;  \n  color: white;\n  font-weight: 500;\n  font-size: 1rem;\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n  margin: 0;\n  margin-bottom: 0.3rem;\n  a {\n    color: white;\n  }\n`\n\nconst OpenWithSpotify = styled.a`\n  margin: 0;\n  color: white;\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n`\n\nconst PlaylistItems = styled.table`\n  color: white;\n\n  display: grid;\n  border-collapse: collapse;\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n  font-size: 0.8rem;\n  min-width: 100%;\n  grid-template-columns: \n    minmax(75px, 1fr)\n    minmax(150px, 2fr)\n    minmax(150px, 2fr)\n    minmax(150px, 1fr);\n\n  thead, tbody, tr {\n    display: contents;\n  }\n\n  th, td {\n    padding: 0.7rem;\n    padding-left: 0.3rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  th {\n    top: 0;\n    text-align: left;\n    font-weight: normal;\n    font-size: 0.8rem;\n    font-weight: 600;\n    color: white;\n  }\n\n  th:last-child {\n    border: 0;\n  }\n\n  td {\n    display: flex;\n    border-top: 1px solid #3A3A3A;\n    align-items: center;\n  }\n\n  td:first-child {\n    /* padding: 0.3rem 0.3rem; */\n    img {\n      width: 20%;\n      filter: brightness(0) invert(1);\n      margin: 0 auto;\n      padding: 0;\n      cursor: pointer;\n      &:hover {\n        opacity: 0.75;\n      }\n    }\n  }\n\n  td {\n    padding: 0.5rem 0.3rem;\n    color: #CACACA;\n  }\n`\n\nconst TableText = styled.div`\n  display: block;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  width: 90%;\n`\n\nclass Playlist extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      playlist: null,\n      tracks: null,\n      audioFeatures: null,\n      combined: {}\n    };\n  }\n\n  componentDidMount() {\n    catchErrors(this.getData());\n  }\n\n  async getData() {\n    const { playlistId } = this.props;\n    const { data } = await getPlaylist(playlistId);\n    this.setState({ playlist: data });\n\n    if (data) {\n      const { playlist } = this.state;\n      const { data } = await getAudioFeaturesForTracks(playlist.tracks.items);\n\n      console.log(playlist)\n\n      const audioFeatures = data.audio_features.reduce((obj, item) => (\n        obj[item.id] = {\n          acousticness: item.acousticness,\n          danceability: item.danceability,\n          energy: item.energy,\n          instrumentalness: item.instrumentalness,\n          speechiness: item.speechiness,\n          temp: item.tempo,\n          valence: item.valence\n        // eslint-disable-next-line no-sequences\n        }, obj) ,{}\n      );\n      // console.log(playlist.tracks.items)\n      const tracks = playlist.tracks.items.map(({track})=>track).reduce((obj, item) => (\n        obj[item.id] = {\n          trackArtist: item.artists[0].name,\n          trackLength: item.duration_ms,\n          trackName: item.name,\n          albumArt: item.album.images[0].url,\n          albumName: item.album.name\n        // eslint-disable-next-line no-sequences\n        }, obj) ,{}\n      );\n\n      const combined = _.merge(tracks, audioFeatures)\n      // console.log(combined)\n\n      this.setState({ \n        audioFeatures: data,  \n        combined\n      });\n\n    }\n  }\n\n  formatTime = ms => {\n    const secs = (ms / 1000) // to seconds\n    const minutes = parseInt(secs / 60) // to minutes\n    let secsLeft = parseInt(secs - (minutes*60))\n    secsLeft = ('0' + secsLeft).slice(-2)\n    const result = `${minutes}:${secsLeft}`\n    return result\n  }\n\n  handlePlay(albumArt, uri, name){\n    // If the track is NOT already playing\n    // or if a new track is selected, PLAY\n    if (!this.props.playback.pauseTrack || (\n      this.props.playback.uri !== uri\n    )){\n      this.props.playTrack({\n        albumArt,\n        uri,\n        name\n      })\n    }\n  }\n\n  render() {\n    const { combined, playlist } = this.state;\n \n    return (\n      <div>\n          {playlist ?\n          (<PlaylistHeaderContainer>\n            <img alt={`Playlist cover for ${playlist.name}`} src={playlist.images[0].url} />\n            <PlaylistInfo>\n              <PlaylistHeader>{playlist.name}</PlaylistHeader>\n              <SubHeader>\n              <PlaylistCreator>By: @ \n                <a href={playlist.owner.external_urls.spotify}>\n                  {playlist.owner.id}\n                </a></PlaylistCreator>\n                <OpenWithSpotify href={playlist.external_urls.spotify}>\n                  Open this playlist with Spotify\n                </OpenWithSpotify>\n              </SubHeader>\n            </PlaylistInfo>\n          </PlaylistHeaderContainer>\n          )\n          : <div>Loading</div>}\n        <PlaylistItems>\n          <thead>\n            <tr>\n              <th></th>\n              <th>NAME</th>\n              <th>ARTIST</th>\n              <th>LENGTH</th>\n              {/*<th>acousticness</th>\n              <th>danceability</th>\n              <th>energy</th>\n              <th>valence</th>\n              <th>instrumentalness</th>\n              <th>speechiness</th>\n              <th>temp</th>\n              <th>URI ID</th>*/}\n            </tr>\n          </thead>\n          <tbody>\n            {Object.keys(combined).length !== 0 ? \n              (Object.keys(combined).map((key, idx) => {\n                return(\n                  <tr key={key}>\n                    <td>{this.props.playback.playerReady ? \n                      (<img alt=\"play-icon\" \n                        src={playIcon} \n                        tabIndex={idx+1}\n                        onKeyDown={(event) => {\n                          if(event.key === 'Enter'){\n                            this.handlePlay(combined[key].albumArt, key, combined[key].trackName)\n                          }\n                        }}\n                        onClick={() => \n                          this.handlePlay(combined[key].albumArt, key, combined[key].trackName)\n                        }\n                        />)\n                    : <img alt=\"play-icon-loading\"  \n                        src={playIcon} \n                      />}</td>\n                    <td><TableText>{combined[key].trackName}</TableText></td>\n                    <td><TableText>{combined[key].trackArtist}</TableText></td>\n                    <td>{this.formatTime(combined[key].trackLength)}</td>\n                    {/*<td>{combined[key].acousticness}</td>\n                    <td>{combined[key].danceability}</td>\n                    <td>{combined[key].energy}</td>\n                    <td>{combined[key].valence}</td>\n                    <td>{combined[key].instrumentalness}</td>\n                    <td>{combined[key].speechiness}</td>\n                    <td>{combined[key].temp}</td>\n                    <td>{key}</td>*/}\n                  </tr>\n                )\n              }\n              ))\n              : (<tr><td>Loading</td></tr>)}\n          </tbody>\n        </PlaylistItems>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  // From Store\n  const { playback, cache } = state\n  // console.log(playback)\n  return { playback, cache }\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  playTrack: (trackObject) => dispatch(playTrack(trackObject)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Playlist)","export const playTrack = ({albumArt, uri, name}) => ({\n  type: 'PLAY_TRACK',\n  albumArt,\n  uri,\n  name\n})\n\nexport const setPlayerState = ({state}) => {\n  return ({\n    type: 'SET_PLAYER_STATE',\n    state\n  })\n}\n\nexport const setPlayerReady = () => {\n  return ({\n    type: 'SET_PLAYER_READY'\n  })\n}\n\nexport const togglePlay = () => {\n  return ({\n    type: 'TOGGLE_PLAY'\n  })\n}","import axios from 'axios';\n\nlet backendURL = process.env.REDIRECT_URI || 'http://localhost:8888/colors'\n\nexport const getAlbumPrimaryColor = (url) => axios.post(backendURL, {url})","import React, { Component } from 'react';\nimport Script from 'react-load-script';\nimport { connect } from 'react-redux'\nimport { getAccessToken, playTrack, resumeTrack } from '../spotify'\nimport styled from 'styled-components/macro';\nimport spotifyLogo from '../icons/spotify-logo.svg'\nimport playIcon from '../icons/play-icon.svg'\nimport pauseIcon from '../icons/pause-icon.svg'\nimport { setPlayerReady, togglePlay } from '../actions/playerControls'\n\nconst AlbumArt = styled.img`\n  width: 20vw;\n  height: 20vw;\n  border: none;\n`\n\nconst PlayerSection = styled.div`\n  height: 50%;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`\n\nconst NowPlaying = styled.h1`\n  font-family: ${props => props.theme.login.fontFamily};\n  text-align: center;\n  flex-basis: 100%;\n`\n\nconst ControlsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`\n\nconst CircularContainer = styled.div`\n  z-index: 0;\n  width: 5vw;\n  height: 5vw;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  border-radius: 50%;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.75;\n  }\n`\n\nconst TogglePlay = styled.img`\n  z-index: 1;\n  width: 50%;\n  /* border: 1px solid ${this.props.lightText ? 'white' : 'black'}; */\n`\n\n// const SliderContainer = styled.div`\n//   width: 100%;\n//   display: flex;\n// `\n// const Slider = styled.input`\n//   width: 50%;\n//   margin: 0 auto;\n// `\n\nclass Player extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLoadSuccess = this.handleLoadSuccess.bind(this);\n    this.handleLoadFailure = this.handleLoadSuccess.bind(this);\n    this.cb = this.cb.bind(this);\n    this.nodeRef = React.createRef(null);\n    this.state = {\n      playerReady: false,\n      trackName: \"\",\n      currentPosition: 0\n    }\n  }\n\n  componentDidMount() {\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      this.handleLoadSuccess();\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if (this.props.playback.uri !== \"\" && prevProps.playback.uri !== this.props.playback.uri){\n      this.executePlaySong(this.props.playback.uri);\n    }\n  }\n\n  async handleLoadSuccess() {\n    this.setState({ scriptLoaded: true });\n    console.log(\"Script loaded\");\n    const token = await getAccessToken();\n    this.player = new window.Spotify.Player({\n      name: 'Web Playback SDK Quick Start Player',\n      getOAuthToken: cb => { cb(token); }\n    });\n    \n\n    // Error handling\n    this.player.addListener('initialization_error', ({ message }) => { console.error(message); });\n    this.player.addListener('authentication_error', ({ message }) => { console.error(message); });\n    this.player.addListener('account_error', ({ message }) => { console.error(message); });\n    this.player.addListener('playback_error', ({ message }) => { console.error(message); });\n\n    // Playback status updates\n    this.player.addListener('player_state_changed', state => { \n      this.setState({ paused: state.paused })\n    });\n\n    // Ready\n    this.player.addListener('ready', ({ device_id }) => {\n      this.setState({ playerReady: true });\n      this.deviceId = device_id\n      console.log('Ready with Device ID', device_id);\n      this.props.setPlayerReady()\n    });\n\n    // Not Ready\n    this.player.addListener('not_ready', ({ device_id }) => {\n      console.log('Device ID has gone offline', device_id);\n    });\n\n    // Connect to the player!\n    this.player.connect();\n  }\n\n  cb(token) {\n    return(token);\n  }\n\n  handleScriptCreate() {\n    this.setState({ scriptLoaded: false });\n    console.log(\"Script created\");\n  }\n\n  handleScriptError() {\n    this.setState({ scriptError: true });\n    console.log(\"Script error\");\n  }\n\n  handleScriptLoad() {\n    this.setState({ scriptLoaded: true});\n    console.log(\"Script loaded\");\n  }\n\n  executePlaySong(uri){\n    if (this.deviceId){\n      // console.log('executePlaySong', uri)\n      playTrack(uri, this.deviceId)\n    }\n  }\n\n  togglePlayback(){\n    this.player.togglePlay()\n    this.props.togglePlay()\n  }\n\n  executeResumeSong(){\n    resumeTrack(this.deviceId)\n  }\n\n  render() {\n    return (\n      <PlayerSection>\n        <AlbumArt id=\"album-art\" \n          src={this.props.playback.albumArt ? this.props.playback.albumArt : spotifyLogo} \n        />\n        <NowPlaying\n          style={{\n            color: `${this.props.lightText ? 'white' : 'black'}`\n          }}\n        >\n          {this.props.playback.trackName === \"\" ? \n          'Welcome to Cloudy Day Club' \n          : this.props.playback.trackName}\n        </NowPlaying>\n        {this.state.playerReady && this.props.playback.uri !== \"\" ?\n          (<ControlsContainer>\n            \n            {/*<SliderContainer>\n              <Slider type=\"range\" min=\"1\" max=\"100\" value={this.calcSliderPosition()} />\n            </SliderContainer>*/}\n            {/*<button onClick={() => this.executePlaySong(this.props.playback.uri.toString())}>Start from Beginning</button>*/}\n              <CircularContainer\n                style={{\n                  border: `${this.props.lightText ? '3px solid white' : '3px solid black'}`\n                }}\n                onClick={() => this.togglePlayback()}\n              >\n                <TogglePlay \n                  src={(this.state.paused) ? \n                    playIcon : pauseIcon \n                  }\n                  style={{\n                    filter: `${this.props.lightText ? 'brightness(0) invert(1)' : 'brightness(0)'}`,\n                  }}\n                />\n              </CircularContainer>\n            </ControlsContainer>\n          )\n          : (<div></div>)\n        }\n        <header>\n          <Script\n            url=\"https://sdk.scdn.co/spotify-player.js\"\n            onCreate={this.handleScriptCreate.bind(this)}\n            onError={this.handleScriptError.bind(this)}\n            onLoad={this.handleScriptLoad.bind(this)}\n          />\n        </header>\n      </PlayerSection>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  // setPlayerState: (state) => dispatch(setPlayerState(state)),\n  setPlayerReady: () => dispatch(setPlayerReady()),\n  togglePlay: () => dispatch(togglePlay())\n})\n\n\nconst mapStateToProps = (state) => {\n  // From Store\n  const { playback } = state\n  // console.log(playback)\n  return { playback }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player)","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { getAlbumPrimaryColor } from '../colors'\nimport styled from 'styled-components/macro';\nimport { catchErrors } from '../utils'\nimport { rgbToHex, calcTextColor } from '../utils';\nimport { CSSTransition } from 'react-transition-group'\nimport Player from './Player'\n\nconst PlayerPageContainer = styled.div`\n  flex-basis: 40%;\n  display: grid;\n  place-content: center;\n`\nclass PlayerContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.nodeRef = React.createRef(null);\n    this.state = {\n      color: \"#5F2233\",\n      lightText: true\n    }\n  }\n\n  async getAlbumColor(albumArtUrl) {\n    var resp = await getAlbumPrimaryColor(albumArtUrl);\n    const color = rgbToHex(resp.data);\n    const lightText = calcTextColor(resp.data);\n    const trackName = this.props.playback.trackName;\n    console.log('applying new color')\n    this.setState({color, lightText, trackName})\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    // console.log('playerCONTAINER componentDidUpdate')\n    if (prevProps.playback.uri !== this.props.playback.uri) {\n      // console.log('componentDidUpdate, track changed', this.props.playback.trackName)\n      const albumArtUrl = this.props.playback.albumArt;\n      if (albumArtUrl !== prevProps.playback.albumArt){\n        // console.log('componentDidUpdate, album changed', this.props.playback.albumArt, prevProps.playback.albumArt)\n        catchErrors(this.getAlbumColor(albumArtUrl));\n      } else {\n        console.log('no updates to color')\n      }\n    } else if (prevProps.playback.uri === this.props.playback.uri && (this.state.color === 'peachpuff')){\n      console.log('starting up')\n    }\n    else {\n      console.log('no updates to track')\n    }\n  }\n\n  render() {\n    return (\n      <CSSTransition\n        in={(this.props.playback.trackName === this.state.trackName)} \n        timeout={300}\n        className=\"test\"\n        nodeRef={this.nodeRef}\n      >\n        <PlayerPageContainer \n        ref={this.nodeRef}\n        style={{\n          background: `${this.state.color}`\n        }}>\n        <Player lightText={this.state.lightText}/>      \n      </PlayerPageContainer>\n      </CSSTransition>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  // From Store\n  const { playback } = state\n  return { playback }\n}\n\n\nexport default connect(mapStateToProps, undefined)(PlayerContainer)","import React from 'react';\nimport styled from 'styled-components/macro';\nimport playlistsIcon from '../icons/list-icon.svg'\nimport { Link } from '@reach/router';\n\n\nconst NavigationContainer = styled.div`\n  display: grid;\n  align-items: start;\n  /* border: 1px solid red; */\n  height: 70%;\n  width: 40%;\n  margin: auto;\n`\n\nconst NavIcon = styled.div`\n  filter: brightness(0) invert(1);\n  opacity: 0.8;\n  transition: opacity 0.1s;\n  &:hover{\n    opacity: 0.4;\n  }\n  padding-bottom: 1rem;\n`\n\nconst Navigation = styled.nav`\n  color: white;\n  /* border: 1px solid white; */\n`\n\n\n\nconst Navbar = () => (\n  <NavigationContainer>\n    <Navigation>\n      <NavIcon>\n        <Link to='/'>\n          <img src={playlistsIcon} alt=\"playlists\" />\n        </Link>\n      </NavIcon>\n    </Navigation>\n  </NavigationContainer>\n)\n\nexport default Navbar","import React from 'react';\nimport Playlists from './Playlists'\nimport Playlist from './Playlist'\nimport PlayerContainer from './PlayerContainer'\nimport Navbar from './Navbar'\nimport { Router } from '@reach/router';\nimport styled, {ThemeProvider} from 'styled-components/macro';\nimport { primaryTheme } from '../styles/themes';\n\nconst DashboardContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  overflow-x: hidden;\n  display: flex;\n  /* background: #f4bed1; */\n`\n\nconst NavbarContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  overflow-x: hidden;\n  background: darkred;\n  height: 100%;\n  width: 5%;\n  position: fixed;\n  background: ${props => props.theme.spotifydarkgray};\n`\n// Margin Left Must = Navbar Container's Width\nconst InterfaceContainer = styled.div`\n  overflow-y: scroll;\n  margin-left: 5%;\n  background: #2b2a2a;\n  /* background: gray; */\n  flex-basis: 55%;\n`\n\nclass Dashboard extends React.Component {\n\n  render() {\n    \n    return (\n      <ThemeProvider theme={primaryTheme}>\n        <DashboardContainer>\n          <NavbarContainer>\n            <Navbar />\n          </NavbarContainer>\n          <InterfaceContainer>\n            <Router>\n              <Playlists path=\"/\"/>\n              <Playlist path=\"/:playlistId\" />\n            </Router>\n          </InterfaceContainer>\n          <PlayerContainer />\n        </DashboardContainer>\n      </ThemeProvider>\n    )\n  }\n\n}\n\nexport default Dashboard","import React from 'react';\nimport Dashboard from './Dashboard';\n\nconst Profile = () => (\n  <div><Dashboard /></div>\n);\n\nexport default Profile;\n","const playbackReducerDefaultState = {\n  playerReady: false,\n  pauseTrack: false,\n  uri: \"\",\n  albumArt: \"\",\n  trackName: \"\",\n  // playerState: {}\n}\n\nexport default (state = playbackReducerDefaultState, action) => {\n  // console.log(action.type)\n  switch (action.type) {\n    // case 'SET_PLAYER_STATE':\n    //   console.log('HERE')\n    //   return state = {\n    //     ...state,\n    //     playerState: action.state\n    //   }\n    case 'TOGGLE_PLAY':\n      return state = {\n        ...state,\n        pauseTrack: !state.pauseTrack\n      }\n    case 'SET_PLAYER_READY':\n      return state = {\n        ...state,\n        playerReady: true\n      }\n    case 'PLAY_TRACK':\n      // console.log(\"Reducer\", state.uri)\n      return state = {\n        ...state,\n        pauseTrack: false,\n        uri: action.uri,\n        albumArt: action.albumArt,\n        trackName: action.name\n      }\n    default:\n      return state;\n  }\n}","const cacheReducerDefaultState = {\n  playlists: {}\n}\n\nexport default (state = cacheReducerDefaultState, action) => {\n  switch (action.type) {\n    case 'CACHE_PLAYLISTS':\n      return state = {\n        playlists: action.playlists\n      }\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport { Provider } from 'react-redux'\nimport Login from './Login';\nimport Profile from './Profile';\nimport { token } from '../spotify';\nimport configureStore from '../store/configureStore';\nimport '../styles/styles.scss'\n\nconst store = configureStore();\n\nclass App extends React.Component {\n  state = {\n    token: '',\n  };\n\n  componentDidMount() {\n    this.setState({ token });\n  }\n\n  render() {\n    const { token } = this.state;\n    \n    return (\n      <div>\n          {token ? \n          (<Provider store={store}>\n            <Profile />\n          </Provider>) \n          : (<Login />)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers} from 'redux'\nimport PlaybackReducer from '../reducers/playback'\nimport CacheReducer from '../reducers/cache'\n\nexport default () => {\n  // STORE CREATION\n  const store = createStore(\n    combineReducers({\n      playback: PlaybackReducer,\n      cache: CacheReducer\n    })\n  ) \n  return store\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}